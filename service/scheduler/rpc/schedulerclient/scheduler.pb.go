// file: operation.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.0
// source: scheduler.proto

package schedulerclient

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 通用空返回
type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{0}
}

// Attendance 添加
type AttendanceAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                       // 考勤人
	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                     // 用户ID
	Date         string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`                                       // 考勤日期
	CheckInTime  int64  `protobuf:"varint,4,opt,name=check_in_time,json=checkInTime,proto3" json:"check_in_time,omitempty"`   // 签到时间
	CheckInPhoto string `protobuf:"bytes,5,opt,name=check_in_photo,json=checkInPhoto,proto3" json:"check_in_photo,omitempty"` // 签到图片
	SignOffTime  int64  `protobuf:"varint,6,opt,name=sign_off_time,json=signOffTime,proto3" json:"sign_off_time,omitempty"`   // 签退时间
	SignOffPhoto string `protobuf:"bytes,7,opt,name=sign_off_photo,json=signOffPhoto,proto3" json:"sign_off_photo,omitempty"` // 签退图片
	State        int64  `protobuf:"varint,8,opt,name=state,proto3" json:"state,omitempty"`                                    // 考勤状态 上班打卡:1,下班打卡:2,打卡正常:3,打卡异常:4
	CreatedName  string `protobuf:"bytes,9,opt,name=created_name,json=createdName,proto3" json:"created_name,omitempty"`      // 创建人
	TenantId     string `protobuf:"bytes,10,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`              // 租户ID
}

func (x *AttendanceAddReq) Reset() {
	*x = AttendanceAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttendanceAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttendanceAddReq) ProtoMessage() {}

func (x *AttendanceAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttendanceAddReq.ProtoReflect.Descriptor instead.
func (*AttendanceAddReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{1}
}

func (x *AttendanceAddReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttendanceAddReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AttendanceAddReq) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *AttendanceAddReq) GetCheckInTime() int64 {
	if x != nil {
		return x.CheckInTime
	}
	return 0
}

func (x *AttendanceAddReq) GetCheckInPhoto() string {
	if x != nil {
		return x.CheckInPhoto
	}
	return ""
}

func (x *AttendanceAddReq) GetSignOffTime() int64 {
	if x != nil {
		return x.SignOffTime
	}
	return 0
}

func (x *AttendanceAddReq) GetSignOffPhoto() string {
	if x != nil {
		return x.SignOffPhoto
	}
	return ""
}

func (x *AttendanceAddReq) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *AttendanceAddReq) GetCreatedName() string {
	if x != nil {
		return x.CreatedName
	}
	return ""
}

func (x *AttendanceAddReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// Attendance 签退
type AttendancePatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                     // 用户ID
	Date         string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`                                       // 考勤日期
	SignOffTime  int64  `protobuf:"varint,7,opt,name=sign_off_time,json=signOffTime,proto3" json:"sign_off_time,omitempty"`   // 签退时间
	SignOffPhoto string `protobuf:"bytes,8,opt,name=sign_off_photo,json=signOffPhoto,proto3" json:"sign_off_photo,omitempty"` // 签退图片
	TenantId     string `protobuf:"bytes,11,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`              // 租户ID
}

func (x *AttendancePatchReq) Reset() {
	*x = AttendancePatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttendancePatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttendancePatchReq) ProtoMessage() {}

func (x *AttendancePatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttendancePatchReq.ProtoReflect.Descriptor instead.
func (*AttendancePatchReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{2}
}

func (x *AttendancePatchReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AttendancePatchReq) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *AttendancePatchReq) GetSignOffTime() int64 {
	if x != nil {
		return x.SignOffTime
	}
	return 0
}

func (x *AttendancePatchReq) GetSignOffPhoto() string {
	if x != nil {
		return x.SignOffPhoto
	}
	return ""
}

func (x *AttendancePatchReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// Attendance 删除
type AttendanceDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                      // 考勤ID
	DeletedName string `protobuf:"bytes,2,opt,name=deleted_name,json=deletedName,proto3" json:"deleted_name,omitempty"` // 删除人
	TenantId    string `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`          // 租户ID
}

func (x *AttendanceDeleteReq) Reset() {
	*x = AttendanceDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttendanceDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttendanceDeleteReq) ProtoMessage() {}

func (x *AttendanceDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttendanceDeleteReq.ProtoReflect.Descriptor instead.
func (*AttendanceDeleteReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{3}
}

func (x *AttendanceDeleteReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AttendanceDeleteReq) GetDeletedName() string {
	if x != nil {
		return x.DeletedName
	}
	return ""
}

func (x *AttendanceDeleteReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// Attendance 更新
type AttendanceUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                           // 考勤ID
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                       // 考勤人
	UserId       string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                     // 用户ID
	Date         string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`                                       // 考勤日期
	CheckInTime  int64  `protobuf:"varint,5,opt,name=check_in_time,json=checkInTime,proto3" json:"check_in_time,omitempty"`   // 签到时间
	CheckInPhoto string `protobuf:"bytes,6,opt,name=check_in_photo,json=checkInPhoto,proto3" json:"check_in_photo,omitempty"` // 签到图片
	SignOffTime  int64  `protobuf:"varint,7,opt,name=sign_off_time,json=signOffTime,proto3" json:"sign_off_time,omitempty"`   // 签退时间
	SignOffPhoto string `protobuf:"bytes,8,opt,name=sign_off_photo,json=signOffPhoto,proto3" json:"sign_off_photo,omitempty"` // 签退图片
	State        int64  `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`                                    // 考勤状态 上班打卡:1,下班打卡:2,打卡正常:3,打卡异常:4
	UpdatedName  string `protobuf:"bytes,10,opt,name=updated_name,json=updatedName,proto3" json:"updated_name,omitempty"`     // 更新人
	TenantId     string `protobuf:"bytes,11,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`              // 租户ID
}

func (x *AttendanceUpdateReq) Reset() {
	*x = AttendanceUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttendanceUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttendanceUpdateReq) ProtoMessage() {}

func (x *AttendanceUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttendanceUpdateReq.ProtoReflect.Descriptor instead.
func (*AttendanceUpdateReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{4}
}

func (x *AttendanceUpdateReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AttendanceUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttendanceUpdateReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AttendanceUpdateReq) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *AttendanceUpdateReq) GetCheckInTime() int64 {
	if x != nil {
		return x.CheckInTime
	}
	return 0
}

func (x *AttendanceUpdateReq) GetCheckInPhoto() string {
	if x != nil {
		return x.CheckInPhoto
	}
	return ""
}

func (x *AttendanceUpdateReq) GetSignOffTime() int64 {
	if x != nil {
		return x.SignOffTime
	}
	return 0
}

func (x *AttendanceUpdateReq) GetSignOffPhoto() string {
	if x != nil {
		return x.SignOffPhoto
	}
	return ""
}

func (x *AttendanceUpdateReq) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *AttendanceUpdateReq) GetUpdatedName() string {
	if x != nil {
		return x.UpdatedName
	}
	return ""
}

func (x *AttendanceUpdateReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// Attendance 单个查询
type AttendanceFindOneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                             // 考勤ID
	TenantId string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"` // 租户ID
}

func (x *AttendanceFindOneReq) Reset() {
	*x = AttendanceFindOneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttendanceFindOneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttendanceFindOneReq) ProtoMessage() {}

func (x *AttendanceFindOneReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttendanceFindOneReq.ProtoReflect.Descriptor instead.
func (*AttendanceFindOneReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{5}
}

func (x *AttendanceFindOneReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AttendanceFindOneReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// Attendance 单个查询返回
type AttendanceFindOneResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                           // 考勤ID
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                       // 考勤人
	UserId       string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                     // 用户ID
	Date         string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`                                       // 考勤日期
	CheckInTime  int64  `protobuf:"varint,5,opt,name=check_in_time,json=checkInTime,proto3" json:"check_in_time,omitempty"`   // 签到时间
	CheckInPhoto string `protobuf:"bytes,6,opt,name=check_in_photo,json=checkInPhoto,proto3" json:"check_in_photo,omitempty"` // 签到图片
	SignOffTime  int64  `protobuf:"varint,7,opt,name=sign_off_time,json=signOffTime,proto3" json:"sign_off_time,omitempty"`   // 签退时间
	SignOffPhoto string `protobuf:"bytes,8,opt,name=sign_off_photo,json=signOffPhoto,proto3" json:"sign_off_photo,omitempty"` // 签退图片
	State        int64  `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`                                    // 考勤状态 上班打卡:1,下班打卡:2,打卡正常:3,打卡异常:4
	CreatedAt    int64  `protobuf:"varint,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`          // 创建时间
	UpdatedAt    int64  `protobuf:"varint,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`          // 更新时间
	CreatedName  string `protobuf:"bytes,12,opt,name=created_name,json=createdName,proto3" json:"created_name,omitempty"`     // 创建人
	UpdatedName  string `protobuf:"bytes,13,opt,name=updated_name,json=updatedName,proto3" json:"updated_name,omitempty"`     // 更新人
}

func (x *AttendanceFindOneResp) Reset() {
	*x = AttendanceFindOneResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttendanceFindOneResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttendanceFindOneResp) ProtoMessage() {}

func (x *AttendanceFindOneResp) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttendanceFindOneResp.ProtoReflect.Descriptor instead.
func (*AttendanceFindOneResp) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{6}
}

func (x *AttendanceFindOneResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AttendanceFindOneResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttendanceFindOneResp) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AttendanceFindOneResp) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *AttendanceFindOneResp) GetCheckInTime() int64 {
	if x != nil {
		return x.CheckInTime
	}
	return 0
}

func (x *AttendanceFindOneResp) GetCheckInPhoto() string {
	if x != nil {
		return x.CheckInPhoto
	}
	return ""
}

func (x *AttendanceFindOneResp) GetSignOffTime() int64 {
	if x != nil {
		return x.SignOffTime
	}
	return 0
}

func (x *AttendanceFindOneResp) GetSignOffPhoto() string {
	if x != nil {
		return x.SignOffPhoto
	}
	return ""
}

func (x *AttendanceFindOneResp) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *AttendanceFindOneResp) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AttendanceFindOneResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AttendanceFindOneResp) GetCreatedName() string {
	if x != nil {
		return x.CreatedName
	}
	return ""
}

func (x *AttendanceFindOneResp) GetUpdatedName() string {
	if x != nil {
		return x.UpdatedName
	}
	return ""
}

// Attendance 某天
type AttendanceFindOneDayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"` // 租户ID
	UserId   string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`       // 用户ID
	Date     string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`                         // 考勤日期
}

func (x *AttendanceFindOneDayReq) Reset() {
	*x = AttendanceFindOneDayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttendanceFindOneDayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttendanceFindOneDayReq) ProtoMessage() {}

func (x *AttendanceFindOneDayReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttendanceFindOneDayReq.ProtoReflect.Descriptor instead.
func (*AttendanceFindOneDayReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{7}
}

func (x *AttendanceFindOneDayReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *AttendanceFindOneDayReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AttendanceFindOneDayReq) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

// Attendance 单个某天返回
type AttendanceFindOneDayResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date         string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`                                       // 考勤日期
	CheckInTime  int64  `protobuf:"varint,6,opt,name=check_in_time,json=checkInTime,proto3" json:"check_in_time,omitempty"`   // 签到时间
	CheckInPhoto string `protobuf:"bytes,7,opt,name=check_in_photo,json=checkInPhoto,proto3" json:"check_in_photo,omitempty"` // 签到图片
	SignOffTime  int64  `protobuf:"varint,8,opt,name=sign_off_time,json=signOffTime,proto3" json:"sign_off_time,omitempty"`   // 签退时间
	SignOffPhoto string `protobuf:"bytes,9,opt,name=sign_off_photo,json=signOffPhoto,proto3" json:"sign_off_photo,omitempty"` // 签退图片
	State        int64  `protobuf:"varint,10,opt,name=state,proto3" json:"state,omitempty"`                                   // 考勤状态 上班打卡:1,打卡正常:2,打卡异常:3
}

func (x *AttendanceFindOneDayResp) Reset() {
	*x = AttendanceFindOneDayResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttendanceFindOneDayResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttendanceFindOneDayResp) ProtoMessage() {}

func (x *AttendanceFindOneDayResp) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttendanceFindOneDayResp.ProtoReflect.Descriptor instead.
func (*AttendanceFindOneDayResp) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{8}
}

func (x *AttendanceFindOneDayResp) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *AttendanceFindOneDayResp) GetCheckInTime() int64 {
	if x != nil {
		return x.CheckInTime
	}
	return 0
}

func (x *AttendanceFindOneDayResp) GetCheckInPhoto() string {
	if x != nil {
		return x.CheckInPhoto
	}
	return ""
}

func (x *AttendanceFindOneDayResp) GetSignOffTime() int64 {
	if x != nil {
		return x.SignOffTime
	}
	return 0
}

func (x *AttendanceFindOneDayResp) GetSignOffPhoto() string {
	if x != nil {
		return x.SignOffPhoto
	}
	return ""
}

func (x *AttendanceFindOneDayResp) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

// Attendance 分页查询
type AttendanceListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current      int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`                                // 页码
	PageSize     int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`              // 页数
	Name         string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                       // 考勤人
	UserId       string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                     // 用户ID
	Date         string `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`                                       // 考勤日期
	CheckInTime  int64  `protobuf:"varint,6,opt,name=check_in_time,json=checkInTime,proto3" json:"check_in_time,omitempty"`   // 签到时间
	CheckInPhoto string `protobuf:"bytes,7,opt,name=check_in_photo,json=checkInPhoto,proto3" json:"check_in_photo,omitempty"` // 签到图片
	SignOffTime  int64  `protobuf:"varint,8,opt,name=sign_off_time,json=signOffTime,proto3" json:"sign_off_time,omitempty"`   // 签退时间
	SignOffPhoto string `protobuf:"bytes,9,opt,name=sign_off_photo,json=signOffPhoto,proto3" json:"sign_off_photo,omitempty"` // 签退图片
	State        int64  `protobuf:"varint,10,opt,name=state,proto3" json:"state,omitempty"`                                   // 考勤状态 上班打卡:1,打卡正常:2,打卡异常:3
	TenantId     string `protobuf:"bytes,11,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`              // 租户ID
}

func (x *AttendanceListReq) Reset() {
	*x = AttendanceListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttendanceListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttendanceListReq) ProtoMessage() {}

func (x *AttendanceListReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttendanceListReq.ProtoReflect.Descriptor instead.
func (*AttendanceListReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{9}
}

func (x *AttendanceListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AttendanceListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AttendanceListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttendanceListReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AttendanceListReq) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *AttendanceListReq) GetCheckInTime() int64 {
	if x != nil {
		return x.CheckInTime
	}
	return 0
}

func (x *AttendanceListReq) GetCheckInPhoto() string {
	if x != nil {
		return x.CheckInPhoto
	}
	return ""
}

func (x *AttendanceListReq) GetSignOffTime() int64 {
	if x != nil {
		return x.SignOffTime
	}
	return 0
}

func (x *AttendanceListReq) GetSignOffPhoto() string {
	if x != nil {
		return x.SignOffPhoto
	}
	return ""
}

func (x *AttendanceListReq) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *AttendanceListReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// Attendance 分页查询返回
type AttendanceListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*AttendanceListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 内容
}

func (x *AttendanceListResp) Reset() {
	*x = AttendanceListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttendanceListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttendanceListResp) ProtoMessage() {}

func (x *AttendanceListResp) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttendanceListResp.ProtoReflect.Descriptor instead.
func (*AttendanceListResp) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{10}
}

func (x *AttendanceListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AttendanceListResp) GetList() []*AttendanceListData {
	if x != nil {
		return x.List
	}
	return nil
}

// Attendance 列表信息
type AttendanceListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                           // 考勤ID
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                       // 考勤人
	UserId       string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                     // 用户ID
	Date         string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`                                       // 考勤日期
	CheckInTime  int64  `protobuf:"varint,5,opt,name=check_in_time,json=checkInTime,proto3" json:"check_in_time,omitempty"`   // 签到时间
	CheckInPhoto string `protobuf:"bytes,6,opt,name=check_in_photo,json=checkInPhoto,proto3" json:"check_in_photo,omitempty"` // 签到图片
	SignOffTime  int64  `protobuf:"varint,7,opt,name=sign_off_time,json=signOffTime,proto3" json:"sign_off_time,omitempty"`   // 签退时间
	SignOffPhoto string `protobuf:"bytes,8,opt,name=sign_off_photo,json=signOffPhoto,proto3" json:"sign_off_photo,omitempty"` // 签退图片
	State        int64  `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`                                    // 考勤状态 上班打卡:1,下班打卡:2,打卡正常:3,打卡异常:4
	CreatedAt    int64  `protobuf:"varint,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`          // 创建时间
	UpdatedAt    int64  `protobuf:"varint,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`          // 更新时间
	CreatedName  string `protobuf:"bytes,12,opt,name=created_name,json=createdName,proto3" json:"created_name,omitempty"`     // 创建人
	UpdatedName  string `protobuf:"bytes,13,opt,name=updated_name,json=updatedName,proto3" json:"updated_name,omitempty"`     // 更新人
}

func (x *AttendanceListData) Reset() {
	*x = AttendanceListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttendanceListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttendanceListData) ProtoMessage() {}

func (x *AttendanceListData) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttendanceListData.ProtoReflect.Descriptor instead.
func (*AttendanceListData) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{11}
}

func (x *AttendanceListData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AttendanceListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttendanceListData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AttendanceListData) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *AttendanceListData) GetCheckInTime() int64 {
	if x != nil {
		return x.CheckInTime
	}
	return 0
}

func (x *AttendanceListData) GetCheckInPhoto() string {
	if x != nil {
		return x.CheckInPhoto
	}
	return ""
}

func (x *AttendanceListData) GetSignOffTime() int64 {
	if x != nil {
		return x.SignOffTime
	}
	return 0
}

func (x *AttendanceListData) GetSignOffPhoto() string {
	if x != nil {
		return x.SignOffPhoto
	}
	return ""
}

func (x *AttendanceListData) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *AttendanceListData) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AttendanceListData) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AttendanceListData) GetCreatedName() string {
	if x != nil {
		return x.CreatedName
	}
	return ""
}

func (x *AttendanceListData) GetUpdatedName() string {
	if x != nil {
		return x.UpdatedName
	}
	return ""
}

// 根据时间段获取每日考勤
type AttendanceByDaysReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime int64  `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // 开始时间
	EndTime   int64  `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // 结束时间
	UserId    string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`           // 用户ID
	TenantId  string `protobuf:"bytes,7,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
}

func (x *AttendanceByDaysReq) Reset() {
	*x = AttendanceByDaysReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttendanceByDaysReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttendanceByDaysReq) ProtoMessage() {}

func (x *AttendanceByDaysReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttendanceByDaysReq.ProtoReflect.Descriptor instead.
func (*AttendanceByDaysReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{12}
}

func (x *AttendanceByDaysReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AttendanceByDaysReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *AttendanceByDaysReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AttendanceByDaysReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type AttendanceByDaysResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*AttendanceByDaysCounts `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AttendanceByDaysResp) Reset() {
	*x = AttendanceByDaysResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttendanceByDaysResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttendanceByDaysResp) ProtoMessage() {}

func (x *AttendanceByDaysResp) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttendanceByDaysResp.ProtoReflect.Descriptor instead.
func (*AttendanceByDaysResp) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{13}
}

func (x *AttendanceByDaysResp) GetList() []*AttendanceByDaysCounts {
	if x != nil {
		return x.List
	}
	return nil
}

type AttendanceByDaysCounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date         string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`                                       // 考勤日期
	CheckInTime  int64  `protobuf:"varint,6,opt,name=check_in_time,json=checkInTime,proto3" json:"check_in_time,omitempty"`   // 签到时间
	CheckInPhoto string `protobuf:"bytes,7,opt,name=check_in_photo,json=checkInPhoto,proto3" json:"check_in_photo,omitempty"` // 签到图片
	SignOffTime  int64  `protobuf:"varint,8,opt,name=sign_off_time,json=signOffTime,proto3" json:"sign_off_time,omitempty"`   // 签退时间
	SignOffPhoto string `protobuf:"bytes,9,opt,name=sign_off_photo,json=signOffPhoto,proto3" json:"sign_off_photo,omitempty"` // 签退图片
	State        int64  `protobuf:"varint,10,opt,name=state,proto3" json:"state,omitempty"`                                   // 考勤状态 上班打卡:1,打卡正常:2,打卡异常:3
}

func (x *AttendanceByDaysCounts) Reset() {
	*x = AttendanceByDaysCounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttendanceByDaysCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttendanceByDaysCounts) ProtoMessage() {}

func (x *AttendanceByDaysCounts) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttendanceByDaysCounts.ProtoReflect.Descriptor instead.
func (*AttendanceByDaysCounts) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{14}
}

func (x *AttendanceByDaysCounts) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *AttendanceByDaysCounts) GetCheckInTime() int64 {
	if x != nil {
		return x.CheckInTime
	}
	return 0
}

func (x *AttendanceByDaysCounts) GetCheckInPhoto() string {
	if x != nil {
		return x.CheckInPhoto
	}
	return ""
}

func (x *AttendanceByDaysCounts) GetSignOffTime() int64 {
	if x != nil {
		return x.SignOffTime
	}
	return 0
}

func (x *AttendanceByDaysCounts) GetSignOffPhoto() string {
	if x != nil {
		return x.SignOffPhoto
	}
	return ""
}

func (x *AttendanceByDaysCounts) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

// TeamType start---------------------
// 增加部门
type TeamTypeAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedName string `protobuf:"bytes,1,opt,name=created_name,json=createdName,proto3" json:"created_name,omitempty"` // 创建人
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                  // 部门名称
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                    // 描述
	TenantId    string `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`          // 租户id
}

func (x *TeamTypeAddReq) Reset() {
	*x = TeamTypeAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamTypeAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamTypeAddReq) ProtoMessage() {}

func (x *TeamTypeAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamTypeAddReq.ProtoReflect.Descriptor instead.
func (*TeamTypeAddReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{15}
}

func (x *TeamTypeAddReq) GetCreatedName() string {
	if x != nil {
		return x.CreatedName
	}
	return ""
}

func (x *TeamTypeAddReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeamTypeAddReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TeamTypeAddReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// 删除部门
type TeamTypeDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedName string `protobuf:"bytes,1,opt,name=deleted_name,json=deletedName,proto3" json:"deleted_name,omitempty"` // 创建人
	Id          string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`                                      //部门id
	TenantId    string `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`          // 租户id
}

func (x *TeamTypeDeleteReq) Reset() {
	*x = TeamTypeDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamTypeDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamTypeDeleteReq) ProtoMessage() {}

func (x *TeamTypeDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamTypeDeleteReq.ProtoReflect.Descriptor instead.
func (*TeamTypeDeleteReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{16}
}

func (x *TeamTypeDeleteReq) GetDeletedName() string {
	if x != nil {
		return x.DeletedName
	}
	return ""
}

func (x *TeamTypeDeleteReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TeamTypeDeleteReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// 更新部门
type TeamTypeUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                      //部门ID
	UpdatedName string `protobuf:"bytes,2,opt,name=updated_name,json=updatedName,proto3" json:"updated_name,omitempty"` // 创建人
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                  // 部门名称
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`                    // 描述
	TenantId    string `protobuf:"bytes,5,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`          // 租户id
}

func (x *TeamTypeUpdateReq) Reset() {
	*x = TeamTypeUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamTypeUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamTypeUpdateReq) ProtoMessage() {}

func (x *TeamTypeUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamTypeUpdateReq.ProtoReflect.Descriptor instead.
func (*TeamTypeUpdateReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{17}
}

func (x *TeamTypeUpdateReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TeamTypeUpdateReq) GetUpdatedName() string {
	if x != nil {
		return x.UpdatedName
	}
	return ""
}

func (x *TeamTypeUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeamTypeUpdateReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TeamTypeUpdateReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// 查询部门
type TeamTypeFindListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current     int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize    int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                         // 部门名称
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`           // 描述
	TenantId    string `protobuf:"bytes,5,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"` // 租户id
}

func (x *TeamTypeFindListReq) Reset() {
	*x = TeamTypeFindListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamTypeFindListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamTypeFindListReq) ProtoMessage() {}

func (x *TeamTypeFindListReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamTypeFindListReq.ProtoReflect.Descriptor instead.
func (*TeamTypeFindListReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{18}
}

func (x *TeamTypeFindListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *TeamTypeFindListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *TeamTypeFindListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeamTypeFindListReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TeamTypeFindListReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// 查询部门返回
type TeamTypeFindListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*TeamTypeListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *TeamTypeFindListResp) Reset() {
	*x = TeamTypeFindListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamTypeFindListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamTypeFindListResp) ProtoMessage() {}

func (x *TeamTypeFindListResp) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamTypeFindListResp.ProtoReflect.Descriptor instead.
func (*TeamTypeFindListResp) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{19}
}

func (x *TeamTypeFindListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TeamTypeFindListResp) GetList() []*TeamTypeListData {
	if x != nil {
		return x.List
	}
	return nil
}

type TeamTypeListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	PeopleCount int64  `protobuf:"varint,4,opt,name=people_count,json=peopleCount,proto3" json:"people_count,omitempty"` //排班人员总数
}

func (x *TeamTypeListData) Reset() {
	*x = TeamTypeListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamTypeListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamTypeListData) ProtoMessage() {}

func (x *TeamTypeListData) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamTypeListData.ProtoReflect.Descriptor instead.
func (*TeamTypeListData) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{20}
}

func (x *TeamTypeListData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TeamTypeListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeamTypeListData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TeamTypeListData) GetPeopleCount() int64 {
	if x != nil {
		return x.PeopleCount
	}
	return 0
}

// Team start---------------------
// 增加部门人员
type TeamAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedName string   `protobuf:"bytes,1,opt,name=created_name,json=createdName,proto3" json:"created_name,omitempty"` // 创建人
	UserIds     []string `protobuf:"bytes,2,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`             //  用户ID
	TeamTypeId  string   `protobuf:"bytes,3,opt,name=team_type_id,json=teamTypeId,proto3" json:"team_type_id,omitempty"`  // 部门ID
	TenantId    string   `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`          // 租户ID
}

func (x *TeamAddReq) Reset() {
	*x = TeamAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamAddReq) ProtoMessage() {}

func (x *TeamAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamAddReq.ProtoReflect.Descriptor instead.
func (*TeamAddReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{21}
}

func (x *TeamAddReq) GetCreatedName() string {
	if x != nil {
		return x.CreatedName
	}
	return ""
}

func (x *TeamAddReq) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *TeamAddReq) GetTeamTypeId() string {
	if x != nil {
		return x.TeamTypeId
	}
	return ""
}

func (x *TeamAddReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// 删除部门人员
type TeamDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantId string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
}

func (x *TeamDeleteReq) Reset() {
	*x = TeamDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamDeleteReq) ProtoMessage() {}

func (x *TeamDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamDeleteReq.ProtoReflect.Descriptor instead.
func (*TeamDeleteReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{22}
}

func (x *TeamDeleteReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TeamDeleteReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// 更新部门人员
type TeamUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdatedName string `protobuf:"bytes,2,opt,name=updated_name,json=updatedName,proto3" json:"updated_name,omitempty"` // 创建人
	UserId      string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                //  用户ID
	TenantId    string `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`          // 租户ID
}

func (x *TeamUpdateReq) Reset() {
	*x = TeamUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamUpdateReq) ProtoMessage() {}

func (x *TeamUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamUpdateReq.ProtoReflect.Descriptor instead.
func (*TeamUpdateReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{23}
}

func (x *TeamUpdateReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TeamUpdateReq) GetUpdatedName() string {
	if x != nil {
		return x.UpdatedName
	}
	return ""
}

func (x *TeamUpdateReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TeamUpdateReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// 查询部门人员
type TeamFindListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current    int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize   int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	NickName   string `protobuf:"bytes,3,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`         // 昵称
	Major      string `protobuf:"bytes,4,opt,name=major,proto3" json:"major,omitempty"`                               // 专业
	Position   string `protobuf:"bytes,5,opt,name=position,proto3" json:"position,omitempty"`                         // 岗位
	Telephone  string `protobuf:"bytes,6,opt,name=telephone,proto3" json:"telephone,omitempty"`                       // 手机号
	TeamTypeId string `protobuf:"bytes,7,opt,name=team_type_id,json=teamTypeId,proto3" json:"team_type_id,omitempty"` // 部门ID
	TenantId   string `protobuf:"bytes,8,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`         // 租户ID
}

func (x *TeamFindListReq) Reset() {
	*x = TeamFindListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamFindListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamFindListReq) ProtoMessage() {}

func (x *TeamFindListReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamFindListReq.ProtoReflect.Descriptor instead.
func (*TeamFindListReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{24}
}

func (x *TeamFindListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *TeamFindListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *TeamFindListReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *TeamFindListReq) GetMajor() string {
	if x != nil {
		return x.Major
	}
	return ""
}

func (x *TeamFindListReq) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *TeamFindListReq) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *TeamFindListReq) GetTeamTypeId() string {
	if x != nil {
		return x.TeamTypeId
	}
	return ""
}

func (x *TeamFindListReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// 查询部门人员返回
type TeamFindListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*TeamUser `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *TeamFindListResp) Reset() {
	*x = TeamFindListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamFindListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamFindListResp) ProtoMessage() {}

func (x *TeamFindListResp) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamFindListResp.ProtoReflect.Descriptor instead.
func (*TeamFindListResp) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{25}
}

func (x *TeamFindListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TeamFindListResp) GetList() []*TeamUser {
	if x != nil {
		return x.List
	}
	return nil
}

type TeamUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Account   string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	NickName  string `protobuf:"bytes,3,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	Major     string `protobuf:"bytes,4,opt,name=major,proto3" json:"major,omitempty"`
	Position  string `protobuf:"bytes,5,opt,name=position,proto3" json:"position,omitempty"`
	Avatar    string `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Email     string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Telephone string `protobuf:"bytes,8,opt,name=telephone,proto3" json:"telephone,omitempty"`
	State     int64  `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`
	UserId    string `protobuf:"bytes,10,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *TeamUser) Reset() {
	*x = TeamUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamUser) ProtoMessage() {}

func (x *TeamUser) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamUser.ProtoReflect.Descriptor instead.
func (*TeamUser) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{26}
}

func (x *TeamUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TeamUser) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *TeamUser) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *TeamUser) GetMajor() string {
	if x != nil {
		return x.Major
	}
	return ""
}

func (x *TeamUser) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *TeamUser) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *TeamUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *TeamUser) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *TeamUser) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *TeamUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 添加排班类型
type SchedulingTypeAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedName string `protobuf:"bytes,1,opt,name=created_name,json=createdName,proto3" json:"created_name,omitempty"` // 创建人
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                  //  用户ID
	StartTime   string `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`       // 部门ID
	EndTime     string `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`             // 租户ID
	Remark      string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`                              //备注
	Colour      string `protobuf:"bytes,6,opt,name=colour,proto3" json:"colour,omitempty"`                              //备注
	TenantId    string `protobuf:"bytes,7,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`          //租户ID
}

func (x *SchedulingTypeAddReq) Reset() {
	*x = SchedulingTypeAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingTypeAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingTypeAddReq) ProtoMessage() {}

func (x *SchedulingTypeAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingTypeAddReq.ProtoReflect.Descriptor instead.
func (*SchedulingTypeAddReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{27}
}

func (x *SchedulingTypeAddReq) GetCreatedName() string {
	if x != nil {
		return x.CreatedName
	}
	return ""
}

func (x *SchedulingTypeAddReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SchedulingTypeAddReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *SchedulingTypeAddReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *SchedulingTypeAddReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SchedulingTypeAddReq) GetColour() string {
	if x != nil {
		return x.Colour
	}
	return ""
}

func (x *SchedulingTypeAddReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// 删除添加排班类型
type SchedulingTypeDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantId string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
}

func (x *SchedulingTypeDeleteReq) Reset() {
	*x = SchedulingTypeDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingTypeDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingTypeDeleteReq) ProtoMessage() {}

func (x *SchedulingTypeDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingTypeDeleteReq.ProtoReflect.Descriptor instead.
func (*SchedulingTypeDeleteReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{28}
}

func (x *SchedulingTypeDeleteReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SchedulingTypeDeleteReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// 更新添加排班类型
type SchedulingTypeUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdatedName string `protobuf:"bytes,2,opt,name=updated_name,json=updatedName,proto3" json:"updated_name,omitempty"` // 创建人
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                  //  用户ID
	StartTime   string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`       // 部门ID
	EndTime     string `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`             // 租户ID
	Remark      string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`                              //备注
	Colour      string `protobuf:"bytes,7,opt,name=colour,proto3" json:"colour,omitempty"`                              //备注
	TenantId    string `protobuf:"bytes,8,opt,name=TenantId,proto3" json:"TenantId,omitempty"`                          //租户ID
}

func (x *SchedulingTypeUpdateReq) Reset() {
	*x = SchedulingTypeUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingTypeUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingTypeUpdateReq) ProtoMessage() {}

func (x *SchedulingTypeUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingTypeUpdateReq.ProtoReflect.Descriptor instead.
func (*SchedulingTypeUpdateReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{29}
}

func (x *SchedulingTypeUpdateReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SchedulingTypeUpdateReq) GetUpdatedName() string {
	if x != nil {
		return x.UpdatedName
	}
	return ""
}

func (x *SchedulingTypeUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SchedulingTypeUpdateReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *SchedulingTypeUpdateReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *SchedulingTypeUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SchedulingTypeUpdateReq) GetColour() string {
	if x != nil {
		return x.Colour
	}
	return ""
}

func (x *SchedulingTypeUpdateReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// 查询排班类型
type SchedulingTypeFindListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	TenantId string `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"` // 租户ID
}

func (x *SchedulingTypeFindListReq) Reset() {
	*x = SchedulingTypeFindListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingTypeFindListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingTypeFindListReq) ProtoMessage() {}

func (x *SchedulingTypeFindListReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingTypeFindListReq.ProtoReflect.Descriptor instead.
func (*SchedulingTypeFindListReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{30}
}

func (x *SchedulingTypeFindListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *SchedulingTypeFindListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SchedulingTypeFindListReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// 查询排班类型返回
type SchedulingTypeFindListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*SchedulingTypeFindListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SchedulingTypeFindListResp) Reset() {
	*x = SchedulingTypeFindListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingTypeFindListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingTypeFindListResp) ProtoMessage() {}

func (x *SchedulingTypeFindListResp) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingTypeFindListResp.ProtoReflect.Descriptor instead.
func (*SchedulingTypeFindListResp) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{31}
}

func (x *SchedulingTypeFindListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SchedulingTypeFindListResp) GetList() []*SchedulingTypeFindListData {
	if x != nil {
		return x.List
	}
	return nil
}

type SchedulingTypeFindListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                            //  用户ID
	StartTime string `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // 开始时间
	EndTime   string `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // 结束时间
	Colour    string `protobuf:"bytes,5,opt,name=colour,proto3" json:"colour,omitempty"`                        //备注
	Remark    string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`                        //备注
}

func (x *SchedulingTypeFindListData) Reset() {
	*x = SchedulingTypeFindListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingTypeFindListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingTypeFindListData) ProtoMessage() {}

func (x *SchedulingTypeFindListData) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingTypeFindListData.ProtoReflect.Descriptor instead.
func (*SchedulingTypeFindListData) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{32}
}

func (x *SchedulingTypeFindListData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SchedulingTypeFindListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SchedulingTypeFindListData) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *SchedulingTypeFindListData) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *SchedulingTypeFindListData) GetColour() string {
	if x != nil {
		return x.Colour
	}
	return ""
}

func (x *SchedulingTypeFindListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 增加排班列表
type SchedulingAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SchedulingAddReq) Reset() {
	*x = SchedulingAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingAddReq) ProtoMessage() {}

func (x *SchedulingAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingAddReq.ProtoReflect.Descriptor instead.
func (*SchedulingAddReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{33}
}

func (x *SchedulingAddReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 删除排班列表
type SchedulingDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeletedName string `protobuf:"bytes,2,opt,name=deleted_name,json=deletedName,proto3" json:"deleted_name,omitempty"`
	TenantId    string `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
}

func (x *SchedulingDeleteReq) Reset() {
	*x = SchedulingDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingDeleteReq) ProtoMessage() {}

func (x *SchedulingDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingDeleteReq.ProtoReflect.Descriptor instead.
func (*SchedulingDeleteReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{34}
}

func (x *SchedulingDeleteReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SchedulingDeleteReq) GetDeletedName() string {
	if x != nil {
		return x.DeletedName
	}
	return ""
}

func (x *SchedulingDeleteReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// 更新排班列表
type SchedulingUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdatedName string `protobuf:"bytes,2,opt,name=updated_name,json=updatedName,proto3" json:"updated_name,omitempty"`
	Time        int64  `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                             //  名字
	StartTime   int64  `protobuf:"varint,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // 开始时间
	EndTime     int64  `protobuf:"varint,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // 结束时间
	Colour      string `protobuf:"bytes,7,opt,name=colour,proto3" json:"colour,omitempty"`                         // 颜色
	UserName    string `protobuf:"bytes,8,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	TeamId      string `protobuf:"bytes,9,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	UserId      string `protobuf:"bytes,10,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TenantId    string `protobuf:"bytes,11,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
}

func (x *SchedulingUpdateReq) Reset() {
	*x = SchedulingUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingUpdateReq) ProtoMessage() {}

func (x *SchedulingUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingUpdateReq.ProtoReflect.Descriptor instead.
func (*SchedulingUpdateReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{35}
}

func (x *SchedulingUpdateReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SchedulingUpdateReq) GetUpdatedName() string {
	if x != nil {
		return x.UpdatedName
	}
	return ""
}

func (x *SchedulingUpdateReq) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *SchedulingUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SchedulingUpdateReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *SchedulingUpdateReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *SchedulingUpdateReq) GetColour() string {
	if x != nil {
		return x.Colour
	}
	return ""
}

func (x *SchedulingUpdateReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SchedulingUpdateReq) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *SchedulingUpdateReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SchedulingUpdateReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// 查询排班列表
type SchedulingFindListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize  int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Time      int64  `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                             //  名字
	StartTime int64  `protobuf:"varint,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // 开始时间
	EndTime   int64  `protobuf:"varint,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // 结束时间
	TeamName  string `protobuf:"bytes,7,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
	UserName  string `protobuf:"bytes,8,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	TenantId  string `protobuf:"bytes,9,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
}

func (x *SchedulingFindListReq) Reset() {
	*x = SchedulingFindListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingFindListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingFindListReq) ProtoMessage() {}

func (x *SchedulingFindListReq) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingFindListReq.ProtoReflect.Descriptor instead.
func (*SchedulingFindListReq) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{36}
}

func (x *SchedulingFindListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *SchedulingFindListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SchedulingFindListReq) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *SchedulingFindListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SchedulingFindListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *SchedulingFindListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *SchedulingFindListReq) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *SchedulingFindListReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SchedulingFindListReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

// 查询排班列表返回
type SchedulingFindListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*SchedulingFindListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SchedulingFindListResp) Reset() {
	*x = SchedulingFindListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingFindListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingFindListResp) ProtoMessage() {}

func (x *SchedulingFindListResp) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingFindListResp.ProtoReflect.Descriptor instead.
func (*SchedulingFindListResp) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{37}
}

func (x *SchedulingFindListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SchedulingFindListResp) GetList() []*SchedulingFindListData {
	if x != nil {
		return x.List
	}
	return nil
}

type SchedulingFindListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt    int64  `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    int64  `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedName  string `protobuf:"bytes,4,opt,name=created_name,json=createdName,proto3" json:"created_name,omitempty"`
	UpdatedName  string `protobuf:"bytes,5,opt,name=updated_name,json=updatedName,proto3" json:"updated_name,omitempty"`
	Time         int64  `protobuf:"varint,6,opt,name=time,proto3" json:"time,omitempty"`                            //  排班时间
	Name         string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`                             //  用户ID
	StartTime    int64  `protobuf:"varint,8,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // 部门ID
	EndTime      int64  `protobuf:"varint,9,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // 租户ID
	Colour       string `protobuf:"bytes,10,opt,name=colour,proto3" json:"colour,omitempty"`                        // 租户ID
	TeamName     string `protobuf:"bytes,11,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`    //备注
	UserName     string `protobuf:"bytes,12,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	JobStartTime int64  `protobuf:"varint,13,opt,name=job_start_time,json=jobStartTime,proto3" json:"job_start_time,omitempty"`
	JobEndTime   int64  `protobuf:"varint,14,opt,name=job_end_time,json=jobEndTime,proto3" json:"job_end_time,omitempty"`
}

func (x *SchedulingFindListData) Reset() {
	*x = SchedulingFindListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduler_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingFindListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingFindListData) ProtoMessage() {}

func (x *SchedulingFindListData) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingFindListData.ProtoReflect.Descriptor instead.
func (*SchedulingFindListData) Descriptor() ([]byte, []int) {
	return file_scheduler_proto_rawDescGZIP(), []int{38}
}

func (x *SchedulingFindListData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SchedulingFindListData) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SchedulingFindListData) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SchedulingFindListData) GetCreatedName() string {
	if x != nil {
		return x.CreatedName
	}
	return ""
}

func (x *SchedulingFindListData) GetUpdatedName() string {
	if x != nil {
		return x.UpdatedName
	}
	return ""
}

func (x *SchedulingFindListData) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *SchedulingFindListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SchedulingFindListData) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *SchedulingFindListData) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *SchedulingFindListData) GetColour() string {
	if x != nil {
		return x.Colour
	}
	return ""
}

func (x *SchedulingFindListData) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *SchedulingFindListData) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SchedulingFindListData) GetJobStartTime() int64 {
	if x != nil {
		return x.JobStartTime
	}
	return 0
}

func (x *SchedulingFindListData) GetJobEndTime() int64 {
	if x != nil {
		return x.JobEndTime
	}
	return 0
}

var File_scheduler_proto protoreflect.FileDescriptor

var file_scheduler_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x22, 0x0c, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0xbd, 0x02, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f,
	0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x12, 0x22, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x4f, 0x66, 0x66,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6f, 0x66, 0x66,
	0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x69,
	0x67, 0x6e, 0x4f, 0x66, 0x66, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0xa8, 0x01, 0x0a, 0x12, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6f, 0x66, 0x66,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x69, 0x67,
	0x6e, 0x4f, 0x66, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e,
	0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x4f, 0x66, 0x66, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x13, 0x41,
	0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0xd0, 0x02, 0x0a, 0x13, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6f, 0x66,
	0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x69,
	0x67, 0x6e, 0x4f, 0x66, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x69, 0x67,
	0x6e, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x4f, 0x66, 0x66, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x14, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61,
	0x6e, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x96, 0x03, 0x0a, 0x15, 0x41,
	0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x69,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12,
	0x22, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x4f, 0x66, 0x66, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6f, 0x66, 0x66, 0x5f,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x69, 0x67,
	0x6e, 0x4f, 0x66, 0x66, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x63, 0x0a, 0x17, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63,
	0x65, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x18, 0x41, 0x74, 0x74,
	0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x44, 0x61,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6f, 0x66, 0x66, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e,
	0x4f, 0x66, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x5f,
	0x6f, 0x66, 0x66, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x69, 0x67, 0x6e, 0x4f, 0x66, 0x66, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0xd2, 0x02, 0x0a, 0x11, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x69,
	0x6e, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x0a, 0x0d, 0x73,
	0x69, 0x67, 0x6e, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x4f, 0x66, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x4f, 0x66, 0x66,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x12, 0x41, 0x74, 0x74, 0x65,
	0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x93, 0x03,
	0x0a, 0x12, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x69,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12,
	0x22, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x4f, 0x66, 0x66, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6f, 0x66, 0x66, 0x5f,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x69, 0x67,
	0x6e, 0x4f, 0x66, 0x66, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x13, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e,
	0x63, 0x65, 0x42, 0x79, 0x44, 0x61, 0x79, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x14, 0x41,
	0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x44, 0x61, 0x79, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79,
	0x44, 0x61, 0x79, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xd6, 0x01, 0x0a, 0x16, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x42,
	0x79, 0x44, 0x61, 0x79, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x22, 0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x5f,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x49, 0x6e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x69, 0x67,
	0x6e, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x4f, 0x66, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x4f, 0x66, 0x66, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x0e, 0x54, 0x65,
	0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x63, 0x0a, 0x11, 0x54, 0x65, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x11, 0x54, 0x65, 0x61, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x13, 0x54, 0x65, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x14, 0x54, 0x65, 0x61, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x7b, 0x0a, 0x10, 0x54, 0x65,
	0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x65, 0x6f, 0x70,
	0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x0a, 0x54, 0x65, 0x61, 0x6d,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x0d, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x78, 0x0a, 0x0d, 0x54, 0x65, 0x61, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xf4, 0x01, 0x0a, 0x0f,
	0x54, 0x65, 0x61, 0x6d, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x57, 0x0a, 0x10, 0x54, 0x65, 0x61, 0x6d, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x61,
	0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xfe, 0x01, 0x0a, 0x08,
	0x54, 0x65, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xd4, 0x01, 0x0a,
	0x14, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x17, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x17,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x19, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69,
	0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x1a, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3f, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x1a, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x26, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x65, 0x0a, 0x13, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xae, 0x02, 0x0a, 0x13, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x87, 0x02, 0x0a, 0x15, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x6b, 0x0a, 0x16, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x46,
	0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x3b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xa8,
	0x03, 0x0a, 0x16, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6a, 0x6f, 0x62, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6a, 0x6f, 0x62, 0x5f, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6a,
	0x6f, 0x62, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x32, 0xe0, 0x10, 0x0a, 0x09, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x0d, 0x41, 0x74, 0x74, 0x65, 0x6e,
	0x64, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x64, 0x64, 0x12, 0x21, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6e,
	0x64, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x65,
	0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x12, 0x23, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74,
	0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x1a, 0x1b, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a,
	0x10, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x24, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e,
	0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6e,
	0x64, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x11, 0x41,
	0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65,
	0x12, 0x25, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6e,
	0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64,
	0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x59, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x22, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6b, 0x0a, 0x14, 0x41, 0x74,
	0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x44,
	0x61, 0x79, 0x12, 0x28, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x46,
	0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65,
	0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x65, 0x6e,
	0x64, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x44, 0x61, 0x79, 0x73, 0x12, 0x24, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74,
	0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x44, 0x61, 0x79, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x25, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79,
	0x44, 0x61, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0b, 0x54, 0x65, 0x61, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x41, 0x64, 0x64, 0x12, 0x1f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x0e, 0x54, 0x65, 0x61, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x0e, 0x54, 0x65, 0x61, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x61,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x10, 0x54,
	0x65, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x24, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x07,
	0x54, 0x65, 0x61, 0x6d, 0x41, 0x64, 0x64, 0x12, 0x1b, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x49, 0x0a, 0x0a, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x1e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0a,
	0x54, 0x65, 0x61, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x61,
	0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x0c, 0x54, 0x65, 0x61, 0x6d, 0x46,
	0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x46, 0x69,
	0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x61, 0x6d,
	0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x11,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x41, 0x64,
	0x64, 0x12, 0x25, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x14, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x28, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x14, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69,
	0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x71, 0x0a, 0x16, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69,
	0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x12, 0x21, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55,
	0x0a, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x24, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x65, 0x0a, 0x12, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x69, 0x6e, 0x67, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67,
	0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x13, 0x5a, 0x11,
	0x2e, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scheduler_proto_rawDescOnce sync.Once
	file_scheduler_proto_rawDescData = file_scheduler_proto_rawDesc
)

func file_scheduler_proto_rawDescGZIP() []byte {
	file_scheduler_proto_rawDescOnce.Do(func() {
		file_scheduler_proto_rawDescData = protoimpl.X.CompressGZIP(file_scheduler_proto_rawDescData)
	})
	return file_scheduler_proto_rawDescData
}

var file_scheduler_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_scheduler_proto_goTypes = []interface{}{
	(*CommonResp)(nil),                 // 0: schedulerclient.CommonResp
	(*AttendanceAddReq)(nil),           // 1: schedulerclient.AttendanceAddReq
	(*AttendancePatchReq)(nil),         // 2: schedulerclient.AttendancePatchReq
	(*AttendanceDeleteReq)(nil),        // 3: schedulerclient.AttendanceDeleteReq
	(*AttendanceUpdateReq)(nil),        // 4: schedulerclient.AttendanceUpdateReq
	(*AttendanceFindOneReq)(nil),       // 5: schedulerclient.AttendanceFindOneReq
	(*AttendanceFindOneResp)(nil),      // 6: schedulerclient.AttendanceFindOneResp
	(*AttendanceFindOneDayReq)(nil),    // 7: schedulerclient.AttendanceFindOneDayReq
	(*AttendanceFindOneDayResp)(nil),   // 8: schedulerclient.AttendanceFindOneDayResp
	(*AttendanceListReq)(nil),          // 9: schedulerclient.AttendanceListReq
	(*AttendanceListResp)(nil),         // 10: schedulerclient.AttendanceListResp
	(*AttendanceListData)(nil),         // 11: schedulerclient.AttendanceListData
	(*AttendanceByDaysReq)(nil),        // 12: schedulerclient.AttendanceByDaysReq
	(*AttendanceByDaysResp)(nil),       // 13: schedulerclient.AttendanceByDaysResp
	(*AttendanceByDaysCounts)(nil),     // 14: schedulerclient.AttendanceByDaysCounts
	(*TeamTypeAddReq)(nil),             // 15: schedulerclient.TeamTypeAddReq
	(*TeamTypeDeleteReq)(nil),          // 16: schedulerclient.TeamTypeDeleteReq
	(*TeamTypeUpdateReq)(nil),          // 17: schedulerclient.TeamTypeUpdateReq
	(*TeamTypeFindListReq)(nil),        // 18: schedulerclient.TeamTypeFindListReq
	(*TeamTypeFindListResp)(nil),       // 19: schedulerclient.TeamTypeFindListResp
	(*TeamTypeListData)(nil),           // 20: schedulerclient.TeamTypeListData
	(*TeamAddReq)(nil),                 // 21: schedulerclient.TeamAddReq
	(*TeamDeleteReq)(nil),              // 22: schedulerclient.TeamDeleteReq
	(*TeamUpdateReq)(nil),              // 23: schedulerclient.TeamUpdateReq
	(*TeamFindListReq)(nil),            // 24: schedulerclient.TeamFindListReq
	(*TeamFindListResp)(nil),           // 25: schedulerclient.TeamFindListResp
	(*TeamUser)(nil),                   // 26: schedulerclient.TeamUser
	(*SchedulingTypeAddReq)(nil),       // 27: schedulerclient.SchedulingTypeAddReq
	(*SchedulingTypeDeleteReq)(nil),    // 28: schedulerclient.SchedulingTypeDeleteReq
	(*SchedulingTypeUpdateReq)(nil),    // 29: schedulerclient.SchedulingTypeUpdateReq
	(*SchedulingTypeFindListReq)(nil),  // 30: schedulerclient.SchedulingTypeFindListReq
	(*SchedulingTypeFindListResp)(nil), // 31: schedulerclient.SchedulingTypeFindListResp
	(*SchedulingTypeFindListData)(nil), // 32: schedulerclient.SchedulingTypeFindListData
	(*SchedulingAddReq)(nil),           // 33: schedulerclient.SchedulingAddReq
	(*SchedulingDeleteReq)(nil),        // 34: schedulerclient.SchedulingDeleteReq
	(*SchedulingUpdateReq)(nil),        // 35: schedulerclient.SchedulingUpdateReq
	(*SchedulingFindListReq)(nil),      // 36: schedulerclient.SchedulingFindListReq
	(*SchedulingFindListResp)(nil),     // 37: schedulerclient.SchedulingFindListResp
	(*SchedulingFindListData)(nil),     // 38: schedulerclient.SchedulingFindListData
}
var file_scheduler_proto_depIdxs = []int32{
	11, // 0: schedulerclient.AttendanceListResp.list:type_name -> schedulerclient.AttendanceListData
	14, // 1: schedulerclient.AttendanceByDaysResp.list:type_name -> schedulerclient.AttendanceByDaysCounts
	20, // 2: schedulerclient.TeamTypeFindListResp.list:type_name -> schedulerclient.TeamTypeListData
	26, // 3: schedulerclient.TeamFindListResp.list:type_name -> schedulerclient.TeamUser
	32, // 4: schedulerclient.SchedulingTypeFindListResp.list:type_name -> schedulerclient.SchedulingTypeFindListData
	38, // 5: schedulerclient.SchedulingFindListResp.list:type_name -> schedulerclient.SchedulingFindListData
	1,  // 6: schedulerclient.Scheduler.AttendanceAdd:input_type -> schedulerclient.AttendanceAddReq
	2,  // 7: schedulerclient.Scheduler.AttendancePatch:input_type -> schedulerclient.AttendancePatchReq
	3,  // 8: schedulerclient.Scheduler.AttendanceDelete:input_type -> schedulerclient.AttendanceDeleteReq
	4,  // 9: schedulerclient.Scheduler.AttendanceUpdate:input_type -> schedulerclient.AttendanceUpdateReq
	5,  // 10: schedulerclient.Scheduler.AttendanceFindOne:input_type -> schedulerclient.AttendanceFindOneReq
	9,  // 11: schedulerclient.Scheduler.AttendanceList:input_type -> schedulerclient.AttendanceListReq
	7,  // 12: schedulerclient.Scheduler.AttendanceFindOneDay:input_type -> schedulerclient.AttendanceFindOneDayReq
	12, // 13: schedulerclient.Scheduler.AttendanceByDays:input_type -> schedulerclient.AttendanceByDaysReq
	15, // 14: schedulerclient.Scheduler.TeamTypeAdd:input_type -> schedulerclient.TeamTypeAddReq
	16, // 15: schedulerclient.Scheduler.TeamTypeDelete:input_type -> schedulerclient.TeamTypeDeleteReq
	17, // 16: schedulerclient.Scheduler.TeamTypeUpdate:input_type -> schedulerclient.TeamTypeUpdateReq
	18, // 17: schedulerclient.Scheduler.TeamTypeFindList:input_type -> schedulerclient.TeamTypeFindListReq
	21, // 18: schedulerclient.Scheduler.TeamAdd:input_type -> schedulerclient.TeamAddReq
	22, // 19: schedulerclient.Scheduler.TeamDelete:input_type -> schedulerclient.TeamDeleteReq
	23, // 20: schedulerclient.Scheduler.TeamUpdate:input_type -> schedulerclient.TeamUpdateReq
	24, // 21: schedulerclient.Scheduler.TeamFindList:input_type -> schedulerclient.TeamFindListReq
	27, // 22: schedulerclient.Scheduler.SchedulingTypeAdd:input_type -> schedulerclient.SchedulingTypeAddReq
	28, // 23: schedulerclient.Scheduler.SchedulingTypeDelete:input_type -> schedulerclient.SchedulingTypeDeleteReq
	29, // 24: schedulerclient.Scheduler.SchedulingTypeUpdate:input_type -> schedulerclient.SchedulingTypeUpdateReq
	30, // 25: schedulerclient.Scheduler.SchedulingTypeFindList:input_type -> schedulerclient.SchedulingTypeFindListReq
	33, // 26: schedulerclient.Scheduler.SchedulingAdd:input_type -> schedulerclient.SchedulingAddReq
	34, // 27: schedulerclient.Scheduler.SchedulingDelete:input_type -> schedulerclient.SchedulingDeleteReq
	35, // 28: schedulerclient.Scheduler.SchedulingUpdate:input_type -> schedulerclient.SchedulingUpdateReq
	36, // 29: schedulerclient.Scheduler.SchedulingFindList:input_type -> schedulerclient.SchedulingFindListReq
	0,  // 30: schedulerclient.Scheduler.AttendanceAdd:output_type -> schedulerclient.CommonResp
	0,  // 31: schedulerclient.Scheduler.AttendancePatch:output_type -> schedulerclient.CommonResp
	0,  // 32: schedulerclient.Scheduler.AttendanceDelete:output_type -> schedulerclient.CommonResp
	0,  // 33: schedulerclient.Scheduler.AttendanceUpdate:output_type -> schedulerclient.CommonResp
	6,  // 34: schedulerclient.Scheduler.AttendanceFindOne:output_type -> schedulerclient.AttendanceFindOneResp
	10, // 35: schedulerclient.Scheduler.AttendanceList:output_type -> schedulerclient.AttendanceListResp
	8,  // 36: schedulerclient.Scheduler.AttendanceFindOneDay:output_type -> schedulerclient.AttendanceFindOneDayResp
	13, // 37: schedulerclient.Scheduler.AttendanceByDays:output_type -> schedulerclient.AttendanceByDaysResp
	0,  // 38: schedulerclient.Scheduler.TeamTypeAdd:output_type -> schedulerclient.CommonResp
	0,  // 39: schedulerclient.Scheduler.TeamTypeDelete:output_type -> schedulerclient.CommonResp
	0,  // 40: schedulerclient.Scheduler.TeamTypeUpdate:output_type -> schedulerclient.CommonResp
	19, // 41: schedulerclient.Scheduler.TeamTypeFindList:output_type -> schedulerclient.TeamTypeFindListResp
	0,  // 42: schedulerclient.Scheduler.TeamAdd:output_type -> schedulerclient.CommonResp
	0,  // 43: schedulerclient.Scheduler.TeamDelete:output_type -> schedulerclient.CommonResp
	0,  // 44: schedulerclient.Scheduler.TeamUpdate:output_type -> schedulerclient.CommonResp
	25, // 45: schedulerclient.Scheduler.TeamFindList:output_type -> schedulerclient.TeamFindListResp
	0,  // 46: schedulerclient.Scheduler.SchedulingTypeAdd:output_type -> schedulerclient.CommonResp
	0,  // 47: schedulerclient.Scheduler.SchedulingTypeDelete:output_type -> schedulerclient.CommonResp
	0,  // 48: schedulerclient.Scheduler.SchedulingTypeUpdate:output_type -> schedulerclient.CommonResp
	31, // 49: schedulerclient.Scheduler.SchedulingTypeFindList:output_type -> schedulerclient.SchedulingTypeFindListResp
	0,  // 50: schedulerclient.Scheduler.SchedulingAdd:output_type -> schedulerclient.CommonResp
	0,  // 51: schedulerclient.Scheduler.SchedulingDelete:output_type -> schedulerclient.CommonResp
	0,  // 52: schedulerclient.Scheduler.SchedulingUpdate:output_type -> schedulerclient.CommonResp
	37, // 53: schedulerclient.Scheduler.SchedulingFindList:output_type -> schedulerclient.SchedulingFindListResp
	30, // [30:54] is the sub-list for method output_type
	6,  // [6:30] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_scheduler_proto_init() }
func file_scheduler_proto_init() {
	if File_scheduler_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_scheduler_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttendanceAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttendancePatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttendanceDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttendanceUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttendanceFindOneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttendanceFindOneResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttendanceFindOneDayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttendanceFindOneDayResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttendanceListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttendanceListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttendanceListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttendanceByDaysReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttendanceByDaysResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttendanceByDaysCounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamTypeAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamTypeDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamTypeUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamTypeFindListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamTypeFindListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamTypeListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamFindListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamFindListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulingTypeAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulingTypeDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulingTypeUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulingTypeFindListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulingTypeFindListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulingTypeFindListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulingAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulingDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulingUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulingFindListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulingFindListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduler_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulingFindListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scheduler_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scheduler_proto_goTypes,
		DependencyIndexes: file_scheduler_proto_depIdxs,
		MessageInfos:      file_scheduler_proto_msgTypes,
	}.Build()
	File_scheduler_proto = out.File
	file_scheduler_proto_rawDesc = nil
	file_scheduler_proto_goTypes = nil
	file_scheduler_proto_depIdxs = nil
}
