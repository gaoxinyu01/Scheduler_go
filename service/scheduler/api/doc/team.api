syntax = "v1"

info(
    title: "type title here"
    desc: "type desc here"
    author: "type author here"
    email: "type email here"
    version: "type version here"
)


type (

    NotTeamUserRequest{
        ProductId int64 `json:"product_id"`
    }
    // 添加部门人员
    TeamAddRequest {
        UserIds     []string `json:"user_ids"`
        TeamTypeId string `json:"team_type_id"`
    }

        // 删除部门人员
    TeamDelRequest {
        Id string `path:"id"`
    }

        // 查询部门人员
    TeamListRequest {
        Current    int64  `form:"current,default=1,optional"`
        PageSize   int64  `form:"page_size,default=10,optional"`
        NickName   string  `form:"nick_name,optional"`
        Major    string  `form:"major,optional"`
        Position   string  `form:"position,optional"`
        Telephone   string  `form:"telephone,optional"`
        TeamTypeId string `form:"team_type_id"`
    }


)


@server(
    //声明当前service下所有路由需要jwt鉴权，且会自动生成包含jwt逻辑的代码
//    jwt: Auth
//    middleware: CheckAuth // 路由中间件声明鉴权
    group: team
)

service Scheduler {
    // 查询未添加部门人员
    @handler NotTeamUser
    post /scheduler/notTeamUser (NotTeamUserRequest) returns (Response)

    // 添加部门人员
    @handler TeamAdd
    post /scheduler/team (TeamAddRequest) returns (Response)

    // 删除部门人员
    @handler TeamDel
    delete /scheduler/team/:id (TeamDelRequest) returns (Response)

    // 查询部门人员
    @handler TeamList
    get /scheduler/team (TeamListRequest) returns (Response)
}