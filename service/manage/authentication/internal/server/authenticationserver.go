// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: authentication.proto

package server

import (
	"context"

	"Scheduler_go/service/manage/authentication/authenticationclient"
	"Scheduler_go/service/manage/authentication/internal/logic"
	"Scheduler_go/service/manage/authentication/internal/svc"
)

type AuthenticationServer struct {
	svcCtx *svc.ServiceContext
	authenticationclient.UnimplementedAuthenticationServer
}

func NewAuthenticationServer(svcCtx *svc.ServiceContext) *AuthenticationServer {
	return &AuthenticationServer{
		svcCtx: svcCtx,
	}
}

// 用户登录
func (s *AuthenticationServer) SysLogin(ctx context.Context, in *authenticationclient.SysLoginReq) (*authenticationclient.SysUserFindOneResp, error) {
	l := logic.NewSysLoginLogic(ctx, s.svcCtx)
	return l.SysLogin(in)
}

// 用户
func (s *AuthenticationServer) SysUserAdd(ctx context.Context, in *authenticationclient.SysUserAddReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysUserAddLogic(ctx, s.svcCtx)
	return l.SysUserAdd(in)
}

func (s *AuthenticationServer) SysUserDelete(ctx context.Context, in *authenticationclient.SysUserDeleteReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysUserDeleteLogic(ctx, s.svcCtx)
	return l.SysUserDelete(in)
}

func (s *AuthenticationServer) SysUserUpdate(ctx context.Context, in *authenticationclient.SysUserUpdateReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysUserUpdateLogic(ctx, s.svcCtx)
	return l.SysUserUpdate(in)
}

func (s *AuthenticationServer) SysUserFindOne(ctx context.Context, in *authenticationclient.SysUserFindOneReq) (*authenticationclient.SysUserFindOneResp, error) {
	l := logic.NewSysUserFindOneLogic(ctx, s.svcCtx)
	return l.SysUserFindOne(in)
}

func (s *AuthenticationServer) SysUserList(ctx context.Context, in *authenticationclient.SysUserListReq) (*authenticationclient.SysUserListResp, error) {
	l := logic.NewSysUserListLogic(ctx, s.svcCtx)
	return l.SysUserList(in)
}

// 重置用户密码
func (s *AuthenticationServer) SysUserResetPwd(ctx context.Context, in *authenticationclient.SysUserResetPwdReq) (*authenticationclient.SysUserResetPwdResp, error) {
	l := logic.NewSysUserResetPwdLogic(ctx, s.svcCtx)
	return l.SysUserResetPwd(in)
}

// 用户修改自己的密码
func (s *AuthenticationServer) SysUserUpMyPwd(ctx context.Context, in *authenticationclient.SysUserUpMyPwdReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysUserUpMyPwdLogic(ctx, s.svcCtx)
	return l.SysUserUpMyPwd(in)
}

// 第三方用户
func (s *AuthenticationServer) SysAuthAdd(ctx context.Context, in *authenticationclient.SysAuthAddReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysAuthAddLogic(ctx, s.svcCtx)
	return l.SysAuthAdd(in)
}

func (s *AuthenticationServer) SysAuthDelete(ctx context.Context, in *authenticationclient.SysAuthDeleteReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysAuthDeleteLogic(ctx, s.svcCtx)
	return l.SysAuthDelete(in)
}

func (s *AuthenticationServer) SysAuthUpdate(ctx context.Context, in *authenticationclient.SysAuthUpdateReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysAuthUpdateLogic(ctx, s.svcCtx)
	return l.SysAuthUpdate(in)
}

func (s *AuthenticationServer) SysAuthFindOne(ctx context.Context, in *authenticationclient.SysAuthFindOneReq) (*authenticationclient.SysAuthFindOneResp, error) {
	l := logic.NewSysAuthFindOneLogic(ctx, s.svcCtx)
	return l.SysAuthFindOne(in)
}

func (s *AuthenticationServer) SysAuthList(ctx context.Context, in *authenticationclient.SysAuthListReq) (*authenticationclient.SysAuthListResp, error) {
	l := logic.NewSysAuthListLogic(ctx, s.svcCtx)
	return l.SysAuthList(in)
}

// 角色
func (s *AuthenticationServer) SysRoleAdd(ctx context.Context, in *authenticationclient.SysRoleAddReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysRoleAddLogic(ctx, s.svcCtx)
	return l.SysRoleAdd(in)
}

func (s *AuthenticationServer) SysRoleDelete(ctx context.Context, in *authenticationclient.SysRoleDeleteReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysRoleDeleteLogic(ctx, s.svcCtx)
	return l.SysRoleDelete(in)
}

func (s *AuthenticationServer) SysRoleUpdate(ctx context.Context, in *authenticationclient.SysRoleUpdateReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysRoleUpdateLogic(ctx, s.svcCtx)
	return l.SysRoleUpdate(in)
}

func (s *AuthenticationServer) SysRoleFindOne(ctx context.Context, in *authenticationclient.SysRoleFindOneReq) (*authenticationclient.SysRoleFindOneResp, error) {
	l := logic.NewSysRoleFindOneLogic(ctx, s.svcCtx)
	return l.SysRoleFindOne(in)
}

func (s *AuthenticationServer) SysRoleList(ctx context.Context, in *authenticationclient.SysRoleListReq) (*authenticationclient.SysRoleListResp, error) {
	l := logic.NewSysRoleListLogic(ctx, s.svcCtx)
	return l.SysRoleList(in)
}

// 菜单
func (s *AuthenticationServer) SysMenuAdd(ctx context.Context, in *authenticationclient.SysMenuAddReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysMenuAddLogic(ctx, s.svcCtx)
	return l.SysMenuAdd(in)
}

func (s *AuthenticationServer) SysMenuDelete(ctx context.Context, in *authenticationclient.SysMenuDeleteReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysMenuDeleteLogic(ctx, s.svcCtx)
	return l.SysMenuDelete(in)
}

func (s *AuthenticationServer) SysMenuUpdate(ctx context.Context, in *authenticationclient.SysMenuUpdateReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysMenuUpdateLogic(ctx, s.svcCtx)
	return l.SysMenuUpdate(in)
}

func (s *AuthenticationServer) SysMenuFindOne(ctx context.Context, in *authenticationclient.SysMenuFindOneReq) (*authenticationclient.SysMenuFindOneResp, error) {
	l := logic.NewSysMenuFindOneLogic(ctx, s.svcCtx)
	return l.SysMenuFindOne(in)
}

func (s *AuthenticationServer) SysMenuList(ctx context.Context, in *authenticationclient.SysMenuListReq) (*authenticationclient.SysMenuListResp, error) {
	l := logic.NewSysMenuListLogic(ctx, s.svcCtx)
	return l.SysMenuList(in)
}

// 通过角色ID获取菜单信息
func (s *AuthenticationServer) SysMenuByRoleId(ctx context.Context, in *authenticationclient.SysMenuByRoleIdReq) (*authenticationclient.SysMenuByRoleIdResp, error) {
	l := logic.NewSysMenuByRoleIdLogic(ctx, s.svcCtx)
	return l.SysMenuByRoleId(in)
}

// 接口
func (s *AuthenticationServer) SysInterfaceAdd(ctx context.Context, in *authenticationclient.SysInterfaceAddReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysInterfaceAddLogic(ctx, s.svcCtx)
	return l.SysInterfaceAdd(in)
}

func (s *AuthenticationServer) SysInterfaceDelete(ctx context.Context, in *authenticationclient.SysInterfaceDeleteReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysInterfaceDeleteLogic(ctx, s.svcCtx)
	return l.SysInterfaceDelete(in)
}

func (s *AuthenticationServer) SysInterfaceUpdate(ctx context.Context, in *authenticationclient.SysInterfaceUpdateReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysInterfaceUpdateLogic(ctx, s.svcCtx)
	return l.SysInterfaceUpdate(in)
}

func (s *AuthenticationServer) SysInterfaceFindOne(ctx context.Context, in *authenticationclient.SysInterfaceFindOneReq) (*authenticationclient.SysInterfaceFindOneResp, error) {
	l := logic.NewSysInterfaceFindOneLogic(ctx, s.svcCtx)
	return l.SysInterfaceFindOne(in)
}

func (s *AuthenticationServer) SysInterfaceList(ctx context.Context, in *authenticationclient.SysInterfaceListReq) (*authenticationclient.SysInterfaceListResp, error) {
	l := logic.NewSysInterfaceListLogic(ctx, s.svcCtx)
	return l.SysInterfaceList(in)
}

// 根据请求路径/请求类型 查询
func (s *AuthenticationServer) FindOneInterfaceByPathAndInterfaceType(ctx context.Context, in *authenticationclient.FindOneInterfaceByPathAndInterfaceTypeReq) (*authenticationclient.FindOneInterfaceByPathAndInterfaceTypeResp, error) {
	l := logic.NewFindOneInterfaceByPathAndInterfaceTypeLogic(ctx, s.svcCtx)
	return l.FindOneInterfaceByPathAndInterfaceType(in)
}

// 通过角色ID获取接口信息
func (s *AuthenticationServer) SysInterfaceByRoleId(ctx context.Context, in *authenticationclient.SysInterfaceByRoleIdReq) (*authenticationclient.SysInterfaceByRoleIdResp, error) {
	l := logic.NewSysInterfaceByRoleIdLogic(ctx, s.svcCtx)
	return l.SysInterfaceByRoleId(in)
}

// 通过角色ID获取接口IDS
func (s *AuthenticationServer) SysInterfaceByRoleIdRespIDs(ctx context.Context, in *authenticationclient.SysInterfaceByRoleIdReq) (*authenticationclient.SysInterfaceByRoleIdRespIDsResp, error) {
	l := logic.NewSysInterfaceByRoleIdRespIDsLogic(ctx, s.svcCtx)
	return l.SysInterfaceByRoleIdRespIDs(in)
}

// 字典类型
func (s *AuthenticationServer) SysDictTypeAdd(ctx context.Context, in *authenticationclient.SysDictTypeAddReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysDictTypeAddLogic(ctx, s.svcCtx)
	return l.SysDictTypeAdd(in)
}

func (s *AuthenticationServer) SysDictTypeDelete(ctx context.Context, in *authenticationclient.SysDictTypeDeleteReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysDictTypeDeleteLogic(ctx, s.svcCtx)
	return l.SysDictTypeDelete(in)
}

func (s *AuthenticationServer) SysDictTypeUpdate(ctx context.Context, in *authenticationclient.SysDictTypeUpdateReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysDictTypeUpdateLogic(ctx, s.svcCtx)
	return l.SysDictTypeUpdate(in)
}

func (s *AuthenticationServer) SysDictTypeFindOne(ctx context.Context, in *authenticationclient.SysDictTypeFindOneReq) (*authenticationclient.SysDictTypeFindOneResp, error) {
	l := logic.NewSysDictTypeFindOneLogic(ctx, s.svcCtx)
	return l.SysDictTypeFindOne(in)
}

func (s *AuthenticationServer) SysDictTypeList(ctx context.Context, in *authenticationclient.SysDictTypeListReq) (*authenticationclient.SysDictTypeListResp, error) {
	l := logic.NewSysDictTypeListLogic(ctx, s.svcCtx)
	return l.SysDictTypeList(in)
}

// 字典
func (s *AuthenticationServer) SysDictAdd(ctx context.Context, in *authenticationclient.SysDictAddReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysDictAddLogic(ctx, s.svcCtx)
	return l.SysDictAdd(in)
}

func (s *AuthenticationServer) SysDictDelete(ctx context.Context, in *authenticationclient.SysDictDeleteReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysDictDeleteLogic(ctx, s.svcCtx)
	return l.SysDictDelete(in)
}

func (s *AuthenticationServer) SysDictUpdate(ctx context.Context, in *authenticationclient.SysDictUpdateReq) (*authenticationclient.CommonResp, error) {
	l := logic.NewSysDictUpdateLogic(ctx, s.svcCtx)
	return l.SysDictUpdate(in)
}

func (s *AuthenticationServer) SysDictFindOne(ctx context.Context, in *authenticationclient.SysDictFindOneReq) (*authenticationclient.SysDictFindOneResp, error) {
	l := logic.NewSysDictFindOneLogic(ctx, s.svcCtx)
	return l.SysDictFindOne(in)
}

func (s *AuthenticationServer) SysDictList(ctx context.Context, in *authenticationclient.SysDictListReq) (*authenticationclient.SysDictListResp, error) {
	l := logic.NewSysDictListLogic(ctx, s.svcCtx)
	return l.SysDictList(in)
}
