// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.22.0
// source: authentication.proto

package authenticationclient

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	Authentication_SysLogin_FullMethodName                               = "/authentication.Authentication/SysLogin"
	Authentication_SysUserAdd_FullMethodName                             = "/authentication.Authentication/SysUserAdd"
	Authentication_SysUserDelete_FullMethodName                          = "/authentication.Authentication/SysUserDelete"
	Authentication_SysUserUpdate_FullMethodName                          = "/authentication.Authentication/SysUserUpdate"
	Authentication_SysUserFindOne_FullMethodName                         = "/authentication.Authentication/SysUserFindOne"
	Authentication_SysUserList_FullMethodName                            = "/authentication.Authentication/SysUserList"
	Authentication_SysUserResetPwd_FullMethodName                        = "/authentication.Authentication/SysUserResetPwd"
	Authentication_SysUserUpMyPwd_FullMethodName                         = "/authentication.Authentication/SysUserUpMyPwd"
	Authentication_SysAuthAdd_FullMethodName                             = "/authentication.Authentication/SysAuthAdd"
	Authentication_SysAuthDelete_FullMethodName                          = "/authentication.Authentication/SysAuthDelete"
	Authentication_SysAuthUpdate_FullMethodName                          = "/authentication.Authentication/SysAuthUpdate"
	Authentication_SysAuthFindOne_FullMethodName                         = "/authentication.Authentication/SysAuthFindOne"
	Authentication_SysAuthList_FullMethodName                            = "/authentication.Authentication/SysAuthList"
	Authentication_SysRoleAdd_FullMethodName                             = "/authentication.Authentication/SysRoleAdd"
	Authentication_SysRoleDelete_FullMethodName                          = "/authentication.Authentication/SysRoleDelete"
	Authentication_SysRoleUpdate_FullMethodName                          = "/authentication.Authentication/SysRoleUpdate"
	Authentication_SysRoleFindOne_FullMethodName                         = "/authentication.Authentication/SysRoleFindOne"
	Authentication_SysRoleList_FullMethodName                            = "/authentication.Authentication/SysRoleList"
	Authentication_SysMenuAdd_FullMethodName                             = "/authentication.Authentication/SysMenuAdd"
	Authentication_SysMenuDelete_FullMethodName                          = "/authentication.Authentication/SysMenuDelete"
	Authentication_SysMenuUpdate_FullMethodName                          = "/authentication.Authentication/SysMenuUpdate"
	Authentication_SysMenuFindOne_FullMethodName                         = "/authentication.Authentication/SysMenuFindOne"
	Authentication_SysMenuList_FullMethodName                            = "/authentication.Authentication/SysMenuList"
	Authentication_SysMenuByRoleId_FullMethodName                        = "/authentication.Authentication/SysMenuByRoleId"
	Authentication_SysInterfaceAdd_FullMethodName                        = "/authentication.Authentication/SysInterfaceAdd"
	Authentication_SysInterfaceDelete_FullMethodName                     = "/authentication.Authentication/SysInterfaceDelete"
	Authentication_SysInterfaceUpdate_FullMethodName                     = "/authentication.Authentication/SysInterfaceUpdate"
	Authentication_SysInterfaceFindOne_FullMethodName                    = "/authentication.Authentication/SysInterfaceFindOne"
	Authentication_SysInterfaceList_FullMethodName                       = "/authentication.Authentication/SysInterfaceList"
	Authentication_FindOneInterfaceByPathAndInterfaceType_FullMethodName = "/authentication.Authentication/FindOneInterfaceByPathAndInterfaceType"
	Authentication_SysInterfaceByRoleId_FullMethodName                   = "/authentication.Authentication/SysInterfaceByRoleId"
	Authentication_SysInterfaceByRoleIdRespIDs_FullMethodName            = "/authentication.Authentication/SysInterfaceByRoleIdRespIDs"
	Authentication_SysDictTypeAdd_FullMethodName                         = "/authentication.Authentication/SysDictTypeAdd"
	Authentication_SysDictTypeDelete_FullMethodName                      = "/authentication.Authentication/SysDictTypeDelete"
	Authentication_SysDictTypeUpdate_FullMethodName                      = "/authentication.Authentication/SysDictTypeUpdate"
	Authentication_SysDictTypeFindOne_FullMethodName                     = "/authentication.Authentication/SysDictTypeFindOne"
	Authentication_SysDictTypeList_FullMethodName                        = "/authentication.Authentication/SysDictTypeList"
	Authentication_SysDictAdd_FullMethodName                             = "/authentication.Authentication/SysDictAdd"
	Authentication_SysDictDelete_FullMethodName                          = "/authentication.Authentication/SysDictDelete"
	Authentication_SysDictUpdate_FullMethodName                          = "/authentication.Authentication/SysDictUpdate"
	Authentication_SysDictFindOne_FullMethodName                         = "/authentication.Authentication/SysDictFindOne"
	Authentication_SysDictList_FullMethodName                            = "/authentication.Authentication/SysDictList"
)

// AuthenticationClient is the client API for Authentication service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AuthenticationClient interface {
	// 用户登录
	SysLogin(ctx context.Context, in *SysLoginReq, opts ...grpc.CallOption) (*SysUserFindOneResp, error)
	// 用户
	SysUserAdd(ctx context.Context, in *SysUserAddReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysUserDelete(ctx context.Context, in *SysUserDeleteReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysUserUpdate(ctx context.Context, in *SysUserUpdateReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysUserFindOne(ctx context.Context, in *SysUserFindOneReq, opts ...grpc.CallOption) (*SysUserFindOneResp, error)
	SysUserList(ctx context.Context, in *SysUserListReq, opts ...grpc.CallOption) (*SysUserListResp, error)
	// 重置用户密码
	SysUserResetPwd(ctx context.Context, in *SysUserResetPwdReq, opts ...grpc.CallOption) (*SysUserResetPwdResp, error)
	// 用户修改自己的密码
	SysUserUpMyPwd(ctx context.Context, in *SysUserUpMyPwdReq, opts ...grpc.CallOption) (*CommonResp, error)
	// 第三方用户
	SysAuthAdd(ctx context.Context, in *SysAuthAddReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysAuthDelete(ctx context.Context, in *SysAuthDeleteReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysAuthUpdate(ctx context.Context, in *SysAuthUpdateReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysAuthFindOne(ctx context.Context, in *SysAuthFindOneReq, opts ...grpc.CallOption) (*SysAuthFindOneResp, error)
	SysAuthList(ctx context.Context, in *SysAuthListReq, opts ...grpc.CallOption) (*SysAuthListResp, error)
	// 角色
	SysRoleAdd(ctx context.Context, in *SysRoleAddReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysRoleDelete(ctx context.Context, in *SysRoleDeleteReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysRoleUpdate(ctx context.Context, in *SysRoleUpdateReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysRoleFindOne(ctx context.Context, in *SysRoleFindOneReq, opts ...grpc.CallOption) (*SysRoleFindOneResp, error)
	SysRoleList(ctx context.Context, in *SysRoleListReq, opts ...grpc.CallOption) (*SysRoleListResp, error)
	// 菜单
	SysMenuAdd(ctx context.Context, in *SysMenuAddReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysMenuDelete(ctx context.Context, in *SysMenuDeleteReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysMenuUpdate(ctx context.Context, in *SysMenuUpdateReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysMenuFindOne(ctx context.Context, in *SysMenuFindOneReq, opts ...grpc.CallOption) (*SysMenuFindOneResp, error)
	SysMenuList(ctx context.Context, in *SysMenuListReq, opts ...grpc.CallOption) (*SysMenuListResp, error)
	// 通过角色ID获取菜单信息
	SysMenuByRoleId(ctx context.Context, in *SysMenuByRoleIdReq, opts ...grpc.CallOption) (*SysMenuByRoleIdResp, error)
	// 接口
	SysInterfaceAdd(ctx context.Context, in *SysInterfaceAddReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysInterfaceDelete(ctx context.Context, in *SysInterfaceDeleteReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysInterfaceUpdate(ctx context.Context, in *SysInterfaceUpdateReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysInterfaceFindOne(ctx context.Context, in *SysInterfaceFindOneReq, opts ...grpc.CallOption) (*SysInterfaceFindOneResp, error)
	SysInterfaceList(ctx context.Context, in *SysInterfaceListReq, opts ...grpc.CallOption) (*SysInterfaceListResp, error)
	// 根据请求路径/请求类型 查询
	FindOneInterfaceByPathAndInterfaceType(ctx context.Context, in *FindOneInterfaceByPathAndInterfaceTypeReq, opts ...grpc.CallOption) (*FindOneInterfaceByPathAndInterfaceTypeResp, error)
	// 通过角色ID获取接口信息
	SysInterfaceByRoleId(ctx context.Context, in *SysInterfaceByRoleIdReq, opts ...grpc.CallOption) (*SysInterfaceByRoleIdResp, error)
	// 通过角色ID获取接口IDS
	SysInterfaceByRoleIdRespIDs(ctx context.Context, in *SysInterfaceByRoleIdReq, opts ...grpc.CallOption) (*SysInterfaceByRoleIdRespIDsResp, error)
	// 字典类型
	SysDictTypeAdd(ctx context.Context, in *SysDictTypeAddReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysDictTypeDelete(ctx context.Context, in *SysDictTypeDeleteReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysDictTypeUpdate(ctx context.Context, in *SysDictTypeUpdateReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysDictTypeFindOne(ctx context.Context, in *SysDictTypeFindOneReq, opts ...grpc.CallOption) (*SysDictTypeFindOneResp, error)
	SysDictTypeList(ctx context.Context, in *SysDictTypeListReq, opts ...grpc.CallOption) (*SysDictTypeListResp, error)
	// 字典
	SysDictAdd(ctx context.Context, in *SysDictAddReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysDictDelete(ctx context.Context, in *SysDictDeleteReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysDictUpdate(ctx context.Context, in *SysDictUpdateReq, opts ...grpc.CallOption) (*CommonResp, error)
	SysDictFindOne(ctx context.Context, in *SysDictFindOneReq, opts ...grpc.CallOption) (*SysDictFindOneResp, error)
	SysDictList(ctx context.Context, in *SysDictListReq, opts ...grpc.CallOption) (*SysDictListResp, error)
}

type authenticationClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthenticationClient(cc grpc.ClientConnInterface) AuthenticationClient {
	return &authenticationClient{cc}
}

func (c *authenticationClient) SysLogin(ctx context.Context, in *SysLoginReq, opts ...grpc.CallOption) (*SysUserFindOneResp, error) {
	out := new(SysUserFindOneResp)
	err := c.cc.Invoke(ctx, Authentication_SysLogin_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysUserAdd(ctx context.Context, in *SysUserAddReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysUserAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysUserDelete(ctx context.Context, in *SysUserDeleteReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysUserDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysUserUpdate(ctx context.Context, in *SysUserUpdateReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysUserUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysUserFindOne(ctx context.Context, in *SysUserFindOneReq, opts ...grpc.CallOption) (*SysUserFindOneResp, error) {
	out := new(SysUserFindOneResp)
	err := c.cc.Invoke(ctx, Authentication_SysUserFindOne_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysUserList(ctx context.Context, in *SysUserListReq, opts ...grpc.CallOption) (*SysUserListResp, error) {
	out := new(SysUserListResp)
	err := c.cc.Invoke(ctx, Authentication_SysUserList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysUserResetPwd(ctx context.Context, in *SysUserResetPwdReq, opts ...grpc.CallOption) (*SysUserResetPwdResp, error) {
	out := new(SysUserResetPwdResp)
	err := c.cc.Invoke(ctx, Authentication_SysUserResetPwd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysUserUpMyPwd(ctx context.Context, in *SysUserUpMyPwdReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysUserUpMyPwd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysAuthAdd(ctx context.Context, in *SysAuthAddReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysAuthAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysAuthDelete(ctx context.Context, in *SysAuthDeleteReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysAuthDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysAuthUpdate(ctx context.Context, in *SysAuthUpdateReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysAuthUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysAuthFindOne(ctx context.Context, in *SysAuthFindOneReq, opts ...grpc.CallOption) (*SysAuthFindOneResp, error) {
	out := new(SysAuthFindOneResp)
	err := c.cc.Invoke(ctx, Authentication_SysAuthFindOne_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysAuthList(ctx context.Context, in *SysAuthListReq, opts ...grpc.CallOption) (*SysAuthListResp, error) {
	out := new(SysAuthListResp)
	err := c.cc.Invoke(ctx, Authentication_SysAuthList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysRoleAdd(ctx context.Context, in *SysRoleAddReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysRoleAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysRoleDelete(ctx context.Context, in *SysRoleDeleteReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysRoleDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysRoleUpdate(ctx context.Context, in *SysRoleUpdateReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysRoleUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysRoleFindOne(ctx context.Context, in *SysRoleFindOneReq, opts ...grpc.CallOption) (*SysRoleFindOneResp, error) {
	out := new(SysRoleFindOneResp)
	err := c.cc.Invoke(ctx, Authentication_SysRoleFindOne_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysRoleList(ctx context.Context, in *SysRoleListReq, opts ...grpc.CallOption) (*SysRoleListResp, error) {
	out := new(SysRoleListResp)
	err := c.cc.Invoke(ctx, Authentication_SysRoleList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysMenuAdd(ctx context.Context, in *SysMenuAddReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysMenuAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysMenuDelete(ctx context.Context, in *SysMenuDeleteReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysMenuDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysMenuUpdate(ctx context.Context, in *SysMenuUpdateReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysMenuUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysMenuFindOne(ctx context.Context, in *SysMenuFindOneReq, opts ...grpc.CallOption) (*SysMenuFindOneResp, error) {
	out := new(SysMenuFindOneResp)
	err := c.cc.Invoke(ctx, Authentication_SysMenuFindOne_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysMenuList(ctx context.Context, in *SysMenuListReq, opts ...grpc.CallOption) (*SysMenuListResp, error) {
	out := new(SysMenuListResp)
	err := c.cc.Invoke(ctx, Authentication_SysMenuList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysMenuByRoleId(ctx context.Context, in *SysMenuByRoleIdReq, opts ...grpc.CallOption) (*SysMenuByRoleIdResp, error) {
	out := new(SysMenuByRoleIdResp)
	err := c.cc.Invoke(ctx, Authentication_SysMenuByRoleId_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysInterfaceAdd(ctx context.Context, in *SysInterfaceAddReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysInterfaceAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysInterfaceDelete(ctx context.Context, in *SysInterfaceDeleteReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysInterfaceDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysInterfaceUpdate(ctx context.Context, in *SysInterfaceUpdateReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysInterfaceUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysInterfaceFindOne(ctx context.Context, in *SysInterfaceFindOneReq, opts ...grpc.CallOption) (*SysInterfaceFindOneResp, error) {
	out := new(SysInterfaceFindOneResp)
	err := c.cc.Invoke(ctx, Authentication_SysInterfaceFindOne_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysInterfaceList(ctx context.Context, in *SysInterfaceListReq, opts ...grpc.CallOption) (*SysInterfaceListResp, error) {
	out := new(SysInterfaceListResp)
	err := c.cc.Invoke(ctx, Authentication_SysInterfaceList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) FindOneInterfaceByPathAndInterfaceType(ctx context.Context, in *FindOneInterfaceByPathAndInterfaceTypeReq, opts ...grpc.CallOption) (*FindOneInterfaceByPathAndInterfaceTypeResp, error) {
	out := new(FindOneInterfaceByPathAndInterfaceTypeResp)
	err := c.cc.Invoke(ctx, Authentication_FindOneInterfaceByPathAndInterfaceType_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysInterfaceByRoleId(ctx context.Context, in *SysInterfaceByRoleIdReq, opts ...grpc.CallOption) (*SysInterfaceByRoleIdResp, error) {
	out := new(SysInterfaceByRoleIdResp)
	err := c.cc.Invoke(ctx, Authentication_SysInterfaceByRoleId_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysInterfaceByRoleIdRespIDs(ctx context.Context, in *SysInterfaceByRoleIdReq, opts ...grpc.CallOption) (*SysInterfaceByRoleIdRespIDsResp, error) {
	out := new(SysInterfaceByRoleIdRespIDsResp)
	err := c.cc.Invoke(ctx, Authentication_SysInterfaceByRoleIdRespIDs_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysDictTypeAdd(ctx context.Context, in *SysDictTypeAddReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysDictTypeAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysDictTypeDelete(ctx context.Context, in *SysDictTypeDeleteReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysDictTypeDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysDictTypeUpdate(ctx context.Context, in *SysDictTypeUpdateReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysDictTypeUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysDictTypeFindOne(ctx context.Context, in *SysDictTypeFindOneReq, opts ...grpc.CallOption) (*SysDictTypeFindOneResp, error) {
	out := new(SysDictTypeFindOneResp)
	err := c.cc.Invoke(ctx, Authentication_SysDictTypeFindOne_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysDictTypeList(ctx context.Context, in *SysDictTypeListReq, opts ...grpc.CallOption) (*SysDictTypeListResp, error) {
	out := new(SysDictTypeListResp)
	err := c.cc.Invoke(ctx, Authentication_SysDictTypeList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysDictAdd(ctx context.Context, in *SysDictAddReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysDictAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysDictDelete(ctx context.Context, in *SysDictDeleteReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysDictDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysDictUpdate(ctx context.Context, in *SysDictUpdateReq, opts ...grpc.CallOption) (*CommonResp, error) {
	out := new(CommonResp)
	err := c.cc.Invoke(ctx, Authentication_SysDictUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysDictFindOne(ctx context.Context, in *SysDictFindOneReq, opts ...grpc.CallOption) (*SysDictFindOneResp, error) {
	out := new(SysDictFindOneResp)
	err := c.cc.Invoke(ctx, Authentication_SysDictFindOne_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) SysDictList(ctx context.Context, in *SysDictListReq, opts ...grpc.CallOption) (*SysDictListResp, error) {
	out := new(SysDictListResp)
	err := c.cc.Invoke(ctx, Authentication_SysDictList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthenticationServer is the server API for Authentication service.
// All implementations must embed UnimplementedAuthenticationServer
// for forward compatibility
type AuthenticationServer interface {
	// 用户登录
	SysLogin(context.Context, *SysLoginReq) (*SysUserFindOneResp, error)
	// 用户
	SysUserAdd(context.Context, *SysUserAddReq) (*CommonResp, error)
	SysUserDelete(context.Context, *SysUserDeleteReq) (*CommonResp, error)
	SysUserUpdate(context.Context, *SysUserUpdateReq) (*CommonResp, error)
	SysUserFindOne(context.Context, *SysUserFindOneReq) (*SysUserFindOneResp, error)
	SysUserList(context.Context, *SysUserListReq) (*SysUserListResp, error)
	// 重置用户密码
	SysUserResetPwd(context.Context, *SysUserResetPwdReq) (*SysUserResetPwdResp, error)
	// 用户修改自己的密码
	SysUserUpMyPwd(context.Context, *SysUserUpMyPwdReq) (*CommonResp, error)
	// 第三方用户
	SysAuthAdd(context.Context, *SysAuthAddReq) (*CommonResp, error)
	SysAuthDelete(context.Context, *SysAuthDeleteReq) (*CommonResp, error)
	SysAuthUpdate(context.Context, *SysAuthUpdateReq) (*CommonResp, error)
	SysAuthFindOne(context.Context, *SysAuthFindOneReq) (*SysAuthFindOneResp, error)
	SysAuthList(context.Context, *SysAuthListReq) (*SysAuthListResp, error)
	// 角色
	SysRoleAdd(context.Context, *SysRoleAddReq) (*CommonResp, error)
	SysRoleDelete(context.Context, *SysRoleDeleteReq) (*CommonResp, error)
	SysRoleUpdate(context.Context, *SysRoleUpdateReq) (*CommonResp, error)
	SysRoleFindOne(context.Context, *SysRoleFindOneReq) (*SysRoleFindOneResp, error)
	SysRoleList(context.Context, *SysRoleListReq) (*SysRoleListResp, error)
	// 菜单
	SysMenuAdd(context.Context, *SysMenuAddReq) (*CommonResp, error)
	SysMenuDelete(context.Context, *SysMenuDeleteReq) (*CommonResp, error)
	SysMenuUpdate(context.Context, *SysMenuUpdateReq) (*CommonResp, error)
	SysMenuFindOne(context.Context, *SysMenuFindOneReq) (*SysMenuFindOneResp, error)
	SysMenuList(context.Context, *SysMenuListReq) (*SysMenuListResp, error)
	// 通过角色ID获取菜单信息
	SysMenuByRoleId(context.Context, *SysMenuByRoleIdReq) (*SysMenuByRoleIdResp, error)
	// 接口
	SysInterfaceAdd(context.Context, *SysInterfaceAddReq) (*CommonResp, error)
	SysInterfaceDelete(context.Context, *SysInterfaceDeleteReq) (*CommonResp, error)
	SysInterfaceUpdate(context.Context, *SysInterfaceUpdateReq) (*CommonResp, error)
	SysInterfaceFindOne(context.Context, *SysInterfaceFindOneReq) (*SysInterfaceFindOneResp, error)
	SysInterfaceList(context.Context, *SysInterfaceListReq) (*SysInterfaceListResp, error)
	// 根据请求路径/请求类型 查询
	FindOneInterfaceByPathAndInterfaceType(context.Context, *FindOneInterfaceByPathAndInterfaceTypeReq) (*FindOneInterfaceByPathAndInterfaceTypeResp, error)
	// 通过角色ID获取接口信息
	SysInterfaceByRoleId(context.Context, *SysInterfaceByRoleIdReq) (*SysInterfaceByRoleIdResp, error)
	// 通过角色ID获取接口IDS
	SysInterfaceByRoleIdRespIDs(context.Context, *SysInterfaceByRoleIdReq) (*SysInterfaceByRoleIdRespIDsResp, error)
	// 字典类型
	SysDictTypeAdd(context.Context, *SysDictTypeAddReq) (*CommonResp, error)
	SysDictTypeDelete(context.Context, *SysDictTypeDeleteReq) (*CommonResp, error)
	SysDictTypeUpdate(context.Context, *SysDictTypeUpdateReq) (*CommonResp, error)
	SysDictTypeFindOne(context.Context, *SysDictTypeFindOneReq) (*SysDictTypeFindOneResp, error)
	SysDictTypeList(context.Context, *SysDictTypeListReq) (*SysDictTypeListResp, error)
	// 字典
	SysDictAdd(context.Context, *SysDictAddReq) (*CommonResp, error)
	SysDictDelete(context.Context, *SysDictDeleteReq) (*CommonResp, error)
	SysDictUpdate(context.Context, *SysDictUpdateReq) (*CommonResp, error)
	SysDictFindOne(context.Context, *SysDictFindOneReq) (*SysDictFindOneResp, error)
	SysDictList(context.Context, *SysDictListReq) (*SysDictListResp, error)
	mustEmbedUnimplementedAuthenticationServer()
}

// UnimplementedAuthenticationServer must be embedded to have forward compatible implementations.
type UnimplementedAuthenticationServer struct {
}

func (UnimplementedAuthenticationServer) SysLogin(context.Context, *SysLoginReq) (*SysUserFindOneResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysLogin not implemented")
}
func (UnimplementedAuthenticationServer) SysUserAdd(context.Context, *SysUserAddReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysUserAdd not implemented")
}
func (UnimplementedAuthenticationServer) SysUserDelete(context.Context, *SysUserDeleteReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysUserDelete not implemented")
}
func (UnimplementedAuthenticationServer) SysUserUpdate(context.Context, *SysUserUpdateReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysUserUpdate not implemented")
}
func (UnimplementedAuthenticationServer) SysUserFindOne(context.Context, *SysUserFindOneReq) (*SysUserFindOneResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysUserFindOne not implemented")
}
func (UnimplementedAuthenticationServer) SysUserList(context.Context, *SysUserListReq) (*SysUserListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysUserList not implemented")
}
func (UnimplementedAuthenticationServer) SysUserResetPwd(context.Context, *SysUserResetPwdReq) (*SysUserResetPwdResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysUserResetPwd not implemented")
}
func (UnimplementedAuthenticationServer) SysUserUpMyPwd(context.Context, *SysUserUpMyPwdReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysUserUpMyPwd not implemented")
}
func (UnimplementedAuthenticationServer) SysAuthAdd(context.Context, *SysAuthAddReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysAuthAdd not implemented")
}
func (UnimplementedAuthenticationServer) SysAuthDelete(context.Context, *SysAuthDeleteReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysAuthDelete not implemented")
}
func (UnimplementedAuthenticationServer) SysAuthUpdate(context.Context, *SysAuthUpdateReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysAuthUpdate not implemented")
}
func (UnimplementedAuthenticationServer) SysAuthFindOne(context.Context, *SysAuthFindOneReq) (*SysAuthFindOneResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysAuthFindOne not implemented")
}
func (UnimplementedAuthenticationServer) SysAuthList(context.Context, *SysAuthListReq) (*SysAuthListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysAuthList not implemented")
}
func (UnimplementedAuthenticationServer) SysRoleAdd(context.Context, *SysRoleAddReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysRoleAdd not implemented")
}
func (UnimplementedAuthenticationServer) SysRoleDelete(context.Context, *SysRoleDeleteReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysRoleDelete not implemented")
}
func (UnimplementedAuthenticationServer) SysRoleUpdate(context.Context, *SysRoleUpdateReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysRoleUpdate not implemented")
}
func (UnimplementedAuthenticationServer) SysRoleFindOne(context.Context, *SysRoleFindOneReq) (*SysRoleFindOneResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysRoleFindOne not implemented")
}
func (UnimplementedAuthenticationServer) SysRoleList(context.Context, *SysRoleListReq) (*SysRoleListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysRoleList not implemented")
}
func (UnimplementedAuthenticationServer) SysMenuAdd(context.Context, *SysMenuAddReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysMenuAdd not implemented")
}
func (UnimplementedAuthenticationServer) SysMenuDelete(context.Context, *SysMenuDeleteReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysMenuDelete not implemented")
}
func (UnimplementedAuthenticationServer) SysMenuUpdate(context.Context, *SysMenuUpdateReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysMenuUpdate not implemented")
}
func (UnimplementedAuthenticationServer) SysMenuFindOne(context.Context, *SysMenuFindOneReq) (*SysMenuFindOneResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysMenuFindOne not implemented")
}
func (UnimplementedAuthenticationServer) SysMenuList(context.Context, *SysMenuListReq) (*SysMenuListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysMenuList not implemented")
}
func (UnimplementedAuthenticationServer) SysMenuByRoleId(context.Context, *SysMenuByRoleIdReq) (*SysMenuByRoleIdResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysMenuByRoleId not implemented")
}
func (UnimplementedAuthenticationServer) SysInterfaceAdd(context.Context, *SysInterfaceAddReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysInterfaceAdd not implemented")
}
func (UnimplementedAuthenticationServer) SysInterfaceDelete(context.Context, *SysInterfaceDeleteReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysInterfaceDelete not implemented")
}
func (UnimplementedAuthenticationServer) SysInterfaceUpdate(context.Context, *SysInterfaceUpdateReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysInterfaceUpdate not implemented")
}
func (UnimplementedAuthenticationServer) SysInterfaceFindOne(context.Context, *SysInterfaceFindOneReq) (*SysInterfaceFindOneResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysInterfaceFindOne not implemented")
}
func (UnimplementedAuthenticationServer) SysInterfaceList(context.Context, *SysInterfaceListReq) (*SysInterfaceListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysInterfaceList not implemented")
}
func (UnimplementedAuthenticationServer) FindOneInterfaceByPathAndInterfaceType(context.Context, *FindOneInterfaceByPathAndInterfaceTypeReq) (*FindOneInterfaceByPathAndInterfaceTypeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindOneInterfaceByPathAndInterfaceType not implemented")
}
func (UnimplementedAuthenticationServer) SysInterfaceByRoleId(context.Context, *SysInterfaceByRoleIdReq) (*SysInterfaceByRoleIdResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysInterfaceByRoleId not implemented")
}
func (UnimplementedAuthenticationServer) SysInterfaceByRoleIdRespIDs(context.Context, *SysInterfaceByRoleIdReq) (*SysInterfaceByRoleIdRespIDsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysInterfaceByRoleIdRespIDs not implemented")
}
func (UnimplementedAuthenticationServer) SysDictTypeAdd(context.Context, *SysDictTypeAddReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysDictTypeAdd not implemented")
}
func (UnimplementedAuthenticationServer) SysDictTypeDelete(context.Context, *SysDictTypeDeleteReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysDictTypeDelete not implemented")
}
func (UnimplementedAuthenticationServer) SysDictTypeUpdate(context.Context, *SysDictTypeUpdateReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysDictTypeUpdate not implemented")
}
func (UnimplementedAuthenticationServer) SysDictTypeFindOne(context.Context, *SysDictTypeFindOneReq) (*SysDictTypeFindOneResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysDictTypeFindOne not implemented")
}
func (UnimplementedAuthenticationServer) SysDictTypeList(context.Context, *SysDictTypeListReq) (*SysDictTypeListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysDictTypeList not implemented")
}
func (UnimplementedAuthenticationServer) SysDictAdd(context.Context, *SysDictAddReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysDictAdd not implemented")
}
func (UnimplementedAuthenticationServer) SysDictDelete(context.Context, *SysDictDeleteReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysDictDelete not implemented")
}
func (UnimplementedAuthenticationServer) SysDictUpdate(context.Context, *SysDictUpdateReq) (*CommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysDictUpdate not implemented")
}
func (UnimplementedAuthenticationServer) SysDictFindOne(context.Context, *SysDictFindOneReq) (*SysDictFindOneResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysDictFindOne not implemented")
}
func (UnimplementedAuthenticationServer) SysDictList(context.Context, *SysDictListReq) (*SysDictListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SysDictList not implemented")
}
func (UnimplementedAuthenticationServer) mustEmbedUnimplementedAuthenticationServer() {}

// UnsafeAuthenticationServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AuthenticationServer will
// result in compilation errors.
type UnsafeAuthenticationServer interface {
	mustEmbedUnimplementedAuthenticationServer()
}

func RegisterAuthenticationServer(s grpc.ServiceRegistrar, srv AuthenticationServer) {
	s.RegisterService(&Authentication_ServiceDesc, srv)
}

func _Authentication_SysLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysLoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysLogin_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysLogin(ctx, req.(*SysLoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysUserAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysUserAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysUserAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysUserAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysUserAdd(ctx, req.(*SysUserAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysUserDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysUserDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysUserDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysUserDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysUserDelete(ctx, req.(*SysUserDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysUserUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysUserUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysUserUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysUserUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysUserUpdate(ctx, req.(*SysUserUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysUserFindOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysUserFindOneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysUserFindOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysUserFindOne_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysUserFindOne(ctx, req.(*SysUserFindOneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysUserList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysUserListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysUserList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysUserList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysUserList(ctx, req.(*SysUserListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysUserResetPwd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysUserResetPwdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysUserResetPwd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysUserResetPwd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysUserResetPwd(ctx, req.(*SysUserResetPwdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysUserUpMyPwd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysUserUpMyPwdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysUserUpMyPwd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysUserUpMyPwd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysUserUpMyPwd(ctx, req.(*SysUserUpMyPwdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysAuthAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysAuthAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysAuthAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysAuthAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysAuthAdd(ctx, req.(*SysAuthAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysAuthDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysAuthDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysAuthDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysAuthDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysAuthDelete(ctx, req.(*SysAuthDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysAuthUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysAuthUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysAuthUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysAuthUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysAuthUpdate(ctx, req.(*SysAuthUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysAuthFindOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysAuthFindOneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysAuthFindOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysAuthFindOne_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysAuthFindOne(ctx, req.(*SysAuthFindOneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysAuthList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysAuthListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysAuthList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysAuthList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysAuthList(ctx, req.(*SysAuthListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysRoleAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysRoleAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysRoleAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysRoleAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysRoleAdd(ctx, req.(*SysRoleAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysRoleDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysRoleDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysRoleDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysRoleDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysRoleDelete(ctx, req.(*SysRoleDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysRoleUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysRoleUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysRoleUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysRoleUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysRoleUpdate(ctx, req.(*SysRoleUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysRoleFindOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysRoleFindOneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysRoleFindOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysRoleFindOne_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysRoleFindOne(ctx, req.(*SysRoleFindOneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysRoleList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysRoleListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysRoleList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysRoleList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysRoleList(ctx, req.(*SysRoleListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysMenuAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysMenuAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysMenuAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysMenuAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysMenuAdd(ctx, req.(*SysMenuAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysMenuDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysMenuDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysMenuDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysMenuDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysMenuDelete(ctx, req.(*SysMenuDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysMenuUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysMenuUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysMenuUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysMenuUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysMenuUpdate(ctx, req.(*SysMenuUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysMenuFindOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysMenuFindOneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysMenuFindOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysMenuFindOne_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysMenuFindOne(ctx, req.(*SysMenuFindOneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysMenuList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysMenuListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysMenuList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysMenuList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysMenuList(ctx, req.(*SysMenuListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysMenuByRoleId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysMenuByRoleIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysMenuByRoleId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysMenuByRoleId_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysMenuByRoleId(ctx, req.(*SysMenuByRoleIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysInterfaceAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysInterfaceAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysInterfaceAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysInterfaceAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysInterfaceAdd(ctx, req.(*SysInterfaceAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysInterfaceDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysInterfaceDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysInterfaceDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysInterfaceDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysInterfaceDelete(ctx, req.(*SysInterfaceDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysInterfaceUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysInterfaceUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysInterfaceUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysInterfaceUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysInterfaceUpdate(ctx, req.(*SysInterfaceUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysInterfaceFindOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysInterfaceFindOneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysInterfaceFindOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysInterfaceFindOne_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysInterfaceFindOne(ctx, req.(*SysInterfaceFindOneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysInterfaceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysInterfaceListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysInterfaceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysInterfaceList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysInterfaceList(ctx, req.(*SysInterfaceListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_FindOneInterfaceByPathAndInterfaceType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindOneInterfaceByPathAndInterfaceTypeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).FindOneInterfaceByPathAndInterfaceType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_FindOneInterfaceByPathAndInterfaceType_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).FindOneInterfaceByPathAndInterfaceType(ctx, req.(*FindOneInterfaceByPathAndInterfaceTypeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysInterfaceByRoleId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysInterfaceByRoleIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysInterfaceByRoleId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysInterfaceByRoleId_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysInterfaceByRoleId(ctx, req.(*SysInterfaceByRoleIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysInterfaceByRoleIdRespIDs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysInterfaceByRoleIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysInterfaceByRoleIdRespIDs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysInterfaceByRoleIdRespIDs_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysInterfaceByRoleIdRespIDs(ctx, req.(*SysInterfaceByRoleIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysDictTypeAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysDictTypeAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysDictTypeAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysDictTypeAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysDictTypeAdd(ctx, req.(*SysDictTypeAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysDictTypeDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysDictTypeDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysDictTypeDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysDictTypeDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysDictTypeDelete(ctx, req.(*SysDictTypeDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysDictTypeUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysDictTypeUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysDictTypeUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysDictTypeUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysDictTypeUpdate(ctx, req.(*SysDictTypeUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysDictTypeFindOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysDictTypeFindOneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysDictTypeFindOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysDictTypeFindOne_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysDictTypeFindOne(ctx, req.(*SysDictTypeFindOneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysDictTypeList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysDictTypeListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysDictTypeList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysDictTypeList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysDictTypeList(ctx, req.(*SysDictTypeListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysDictAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysDictAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysDictAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysDictAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysDictAdd(ctx, req.(*SysDictAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysDictDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysDictDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysDictDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysDictDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysDictDelete(ctx, req.(*SysDictDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysDictUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysDictUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysDictUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysDictUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysDictUpdate(ctx, req.(*SysDictUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysDictFindOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysDictFindOneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysDictFindOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysDictFindOne_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysDictFindOne(ctx, req.(*SysDictFindOneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_SysDictList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysDictListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).SysDictList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Authentication_SysDictList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).SysDictList(ctx, req.(*SysDictListReq))
	}
	return interceptor(ctx, in, info, handler)
}

// Authentication_ServiceDesc is the grpc.ServiceDesc for Authentication service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Authentication_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "authentication.Authentication",
	HandlerType: (*AuthenticationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SysLogin",
			Handler:    _Authentication_SysLogin_Handler,
		},
		{
			MethodName: "SysUserAdd",
			Handler:    _Authentication_SysUserAdd_Handler,
		},
		{
			MethodName: "SysUserDelete",
			Handler:    _Authentication_SysUserDelete_Handler,
		},
		{
			MethodName: "SysUserUpdate",
			Handler:    _Authentication_SysUserUpdate_Handler,
		},
		{
			MethodName: "SysUserFindOne",
			Handler:    _Authentication_SysUserFindOne_Handler,
		},
		{
			MethodName: "SysUserList",
			Handler:    _Authentication_SysUserList_Handler,
		},
		{
			MethodName: "SysUserResetPwd",
			Handler:    _Authentication_SysUserResetPwd_Handler,
		},
		{
			MethodName: "SysUserUpMyPwd",
			Handler:    _Authentication_SysUserUpMyPwd_Handler,
		},
		{
			MethodName: "SysAuthAdd",
			Handler:    _Authentication_SysAuthAdd_Handler,
		},
		{
			MethodName: "SysAuthDelete",
			Handler:    _Authentication_SysAuthDelete_Handler,
		},
		{
			MethodName: "SysAuthUpdate",
			Handler:    _Authentication_SysAuthUpdate_Handler,
		},
		{
			MethodName: "SysAuthFindOne",
			Handler:    _Authentication_SysAuthFindOne_Handler,
		},
		{
			MethodName: "SysAuthList",
			Handler:    _Authentication_SysAuthList_Handler,
		},
		{
			MethodName: "SysRoleAdd",
			Handler:    _Authentication_SysRoleAdd_Handler,
		},
		{
			MethodName: "SysRoleDelete",
			Handler:    _Authentication_SysRoleDelete_Handler,
		},
		{
			MethodName: "SysRoleUpdate",
			Handler:    _Authentication_SysRoleUpdate_Handler,
		},
		{
			MethodName: "SysRoleFindOne",
			Handler:    _Authentication_SysRoleFindOne_Handler,
		},
		{
			MethodName: "SysRoleList",
			Handler:    _Authentication_SysRoleList_Handler,
		},
		{
			MethodName: "SysMenuAdd",
			Handler:    _Authentication_SysMenuAdd_Handler,
		},
		{
			MethodName: "SysMenuDelete",
			Handler:    _Authentication_SysMenuDelete_Handler,
		},
		{
			MethodName: "SysMenuUpdate",
			Handler:    _Authentication_SysMenuUpdate_Handler,
		},
		{
			MethodName: "SysMenuFindOne",
			Handler:    _Authentication_SysMenuFindOne_Handler,
		},
		{
			MethodName: "SysMenuList",
			Handler:    _Authentication_SysMenuList_Handler,
		},
		{
			MethodName: "SysMenuByRoleId",
			Handler:    _Authentication_SysMenuByRoleId_Handler,
		},
		{
			MethodName: "SysInterfaceAdd",
			Handler:    _Authentication_SysInterfaceAdd_Handler,
		},
		{
			MethodName: "SysInterfaceDelete",
			Handler:    _Authentication_SysInterfaceDelete_Handler,
		},
		{
			MethodName: "SysInterfaceUpdate",
			Handler:    _Authentication_SysInterfaceUpdate_Handler,
		},
		{
			MethodName: "SysInterfaceFindOne",
			Handler:    _Authentication_SysInterfaceFindOne_Handler,
		},
		{
			MethodName: "SysInterfaceList",
			Handler:    _Authentication_SysInterfaceList_Handler,
		},
		{
			MethodName: "FindOneInterfaceByPathAndInterfaceType",
			Handler:    _Authentication_FindOneInterfaceByPathAndInterfaceType_Handler,
		},
		{
			MethodName: "SysInterfaceByRoleId",
			Handler:    _Authentication_SysInterfaceByRoleId_Handler,
		},
		{
			MethodName: "SysInterfaceByRoleIdRespIDs",
			Handler:    _Authentication_SysInterfaceByRoleIdRespIDs_Handler,
		},
		{
			MethodName: "SysDictTypeAdd",
			Handler:    _Authentication_SysDictTypeAdd_Handler,
		},
		{
			MethodName: "SysDictTypeDelete",
			Handler:    _Authentication_SysDictTypeDelete_Handler,
		},
		{
			MethodName: "SysDictTypeUpdate",
			Handler:    _Authentication_SysDictTypeUpdate_Handler,
		},
		{
			MethodName: "SysDictTypeFindOne",
			Handler:    _Authentication_SysDictTypeFindOne_Handler,
		},
		{
			MethodName: "SysDictTypeList",
			Handler:    _Authentication_SysDictTypeList_Handler,
		},
		{
			MethodName: "SysDictAdd",
			Handler:    _Authentication_SysDictAdd_Handler,
		},
		{
			MethodName: "SysDictDelete",
			Handler:    _Authentication_SysDictDelete_Handler,
		},
		{
			MethodName: "SysDictUpdate",
			Handler:    _Authentication_SysDictUpdate_Handler,
		},
		{
			MethodName: "SysDictFindOne",
			Handler:    _Authentication_SysDictFindOne_Handler,
		},
		{
			MethodName: "SysDictList",
			Handler:    _Authentication_SysDictList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "authentication.proto",
}
